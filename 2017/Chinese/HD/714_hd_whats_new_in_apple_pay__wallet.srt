1
00:00:17,351 --> 00:00:23,824 line:0
<c.magenta>（Apple Pay和Wallet的新特性）</c>


2
00:00:25,292 --> 00:00:26,159 line:-1
<c.magenta>大家好</c>


3
00:00:29,096 --> 00:00:33,267 line:-1
<c.magenta>大家好 感谢参加今晚的最后一场演讲</c>


4
00:00:34,168 --> 00:00:38,205 line:-2
<c.magenta>我们会介绍</c>
<c.magenta>Wallet和Apple Pay的新特性</c>


5
00:00:38,805 --> 00:00:41,175 line:-1
<c.magenta>我们会谈及三方面内容</c>


6
00:00:41,241 --> 00:00:43,744 line:-1
<c.magenta>今天的演讲会分为三部分</c>


7
00:00:44,711 --> 00:00:48,048 line:-2
<c.magenta>首先是关于Apple Pay</c>
<c.magenta>体验的部分内容</c>


8
00:00:48,348 --> 00:00:50,384 line:-1
<c.magenta>在座有些可能了解Apple Pay</c>


9
00:00:50,450 --> 00:00:52,753 line:-1
<c.magenta>不过今年我们也非常忙碌</c>


10
00:00:52,986 --> 00:00:55,556 line:-1
<c.magenta>所以也会介绍我们的部分新成果</c>


11
00:00:56,223 --> 00:00:59,726 line:-2
<c.magenta>接下来是iOS 11和</c>
<c.magenta>macOS High Sierra的相关内容</c>


12
00:00:59,793 --> 00:01:01,929 line:-1
<c.magenta>还会涉及Apple Pay中的新特性</c>


13
00:01:03,263 --> 00:01:07,835 line:-1
<c.magenta>最后是Wallet中的部分新API</c>


14
00:01:09,336 --> 00:01:12,472 line:-1
<c.magenta>还有些内容在本次演讲中不会涉及</c>


15
00:01:13,707 --> 00:01:17,344 line:-2
<c.magenta>我们不会介绍</c>
<c.magenta>Apple Pay API的起步内容</c>


16
00:01:17,411 --> 00:01:20,547 line:-2
<c.magenta>以及如何将Apple Pay</c>
<c.magenta>与付款处理器相整合</c>


17
00:01:20,781 --> 00:01:24,418 line:-2
<c.magenta>相关内容有很好的资源</c>
<c.magenta>大家可以看看去年的</c>


18
00:01:24,618 --> 00:01:27,554 line:-1
<c.magenta>WWDC演讲“网页中的Apple Pay”</c>


19
00:01:27,821 --> 00:01:31,625 line:-2
<c.magenta>和2016年的“Wallet和</c>
<c.magenta>Apple Pay中的新特性”了解更多详情</c>


20
00:01:33,093 --> 00:01:37,297 line:-2
<c.magenta>现在直入正题</c>
<c.magenta>来介绍Apple Pay的体验</c>


21
00:01:38,532 --> 00:01:42,703 line:-2
<c.magenta>希望在座的有许多都用过</c>
<c.magenta>Apple Pay或是在商店</c>


22
00:01:42,769 --> 00:01:46,139 line:-1
<c.magenta>或是在应用中或是在网上</c>


23
00:01:46,206 --> 00:01:51,578 line:-2
<c.magenta>这样就会了解到Apple Pay</c>
<c.magenta>非常方便安全 是私密的付款方式</c>


24
00:01:53,947 --> 00:01:56,817 line:-2
<c.magenta>当我们在iOS 8中</c>
<c.magenta>首次启用Apple Pay</c>


25
00:01:56,884 --> 00:01:59,920 line:-1
<c.magenta>我们支持在应用内付款</c>


26
00:02:02,489 --> 00:02:03,724 line:-1
<c.magenta>这里有个很好的实例</c>


27
00:02:03,957 --> 00:02:08,461 line:-2
<c.magenta>但随后 我们将Apple Pay</c>
<c.magenta>扩展到更多地方</c>


28
00:02:09,363 --> 00:02:11,632 line:-1
<c.magenta>我们将之扩展到Safari</c>


29
00:02:12,799 --> 00:02:16,570 line:-2
<c.magenta>现在大家可以</c>
<c.magenta>在mac和iOS的Safari中付款</c>


30
00:02:17,070 --> 00:02:19,173 line:-1
<c.magenta>我们还扩展到了Siri</c>


31
00:02:19,873 --> 00:02:22,943 line:-1
<c.magenta>大家可以在SiriKit中付款</c>


32
00:02:24,111 --> 00:02:27,814 line:-2
<c.magenta>更有甚者 我们为Apple Pay</c>
<c.magenta>增加了Messages功能</c>


33
00:02:27,881 --> 00:02:30,851 line:-2
<c.magenta>大家可以利用Apple Pay</c>
<c.magenta>编写信息应用</c>


34
00:02:30,918 --> 00:02:32,886 line:-1
<c.magenta>直接在信息应用中即可实现</c>


35
00:02:32,953 --> 00:02:34,655 line:-1
<c.magenta>大家还可以购买电影票</c>


36
00:02:34,922 --> 00:02:38,058 line:-2
<c.magenta>再发送给朋友</c>
<c.magenta>这些无需离开信息应用就能实现</c>


37
00:02:39,426 --> 00:02:42,029 line:-2
<c.magenta>最后 我们增加了</c>
<c.magenta>对watchOS的支持</c>


38
00:02:43,931 --> 00:02:47,000 line:-2
<c.magenta>可以在WatchKit的</c>
<c.magenta>watchOS中支付</c>


39
00:02:48,769 --> 00:02:53,473 line:-2
<c.magenta>去年我们在最新Mac Book Pro</c>
<c.magenta>的触控条中增添了支持</c>


40
00:02:53,841 --> 00:02:55,876 line:-1
<c.magenta>现在可以在Mac中直接付款</c>


41
00:02:55,943 --> 00:02:58,212 line:-1
<c.magenta>而无需转到iOS设备上进行</c>


42
00:03:00,013 --> 00:03:02,382 line:-1
<c.magenta>希望大家也能有机会看到</c>


43
00:03:02,449 --> 00:03:04,218 line:-1
<c.magenta>在WatchKit上搭建的部分应用</c>


44
00:03:04,484 --> 00:03:06,153 line:-1
<c.magenta>Apple Store就是极好的实例</c>


45
00:03:06,386 --> 00:03:09,623 line:-1
<c.magenta>可以直接在手腕上购买配件</c>


46
00:03:10,557 --> 00:03:13,694 line:-1
<c.magenta>只需选择配件 选定卡片 即可搞定</c>


47
00:03:15,295 --> 00:03:18,365 line:-2
<c.magenta>我们最初启用Apple Pay时</c>
<c.magenta>它只能在美国使用</c>


48
00:03:18,432 --> 00:03:20,300 line:-1
<c.magenta>不过随后 我们就忙得不可开交</c>


49
00:03:20,601 --> 00:03:24,571 line:-2
<c.magenta>仅在去年 我们在十几个国家中</c>
<c.magenta>推出这一功能</c>


50
00:03:24,738 --> 00:03:27,841 line:-1
<c.magenta>这里是我们目前提供支持的所有国家</c>


51
00:03:28,742 --> 00:03:32,513 line:-2
<c.magenta>有个国家的情况特别令我激动</c>
<c.magenta>这就是日本</c>


52
00:03:32,679 --> 00:03:34,848 line:-2
<c.magenta>在日本</c>
<c.magenta>大家可以使用Apple Pay</c>


53
00:03:34,915 --> 00:03:38,018 line:-1
<c.magenta>通过企鹅卡 直接乘坐东京捷运系统</c>


54
00:03:38,085 --> 00:03:39,586 line:-1
<c.magenta>效果非常好</c>


55
00:03:41,154 --> 00:03:46,426 line:-2
<c.magenta>去年的WWDC大会之后 我们还</c>
<c.magenta>推出了针对非盈利机构的Apple Pay</c>


56
00:03:46,960 --> 00:03:50,764 line:-2
<c.magenta>如果你在非盈利机构并想使用</c>
<c.magenta>Apple Pay 会非常有趣</c>


57
00:03:50,931 --> 00:03:54,601 line:-2
<c.magenta>可以是在你的应用中</c>
<c.magenta>或是在你的网站中使用</c>


58
00:03:54,868 --> 00:03:57,638 line:-1
<c.magenta>这是来自英国OXFAM的实例</c>


59
00:03:57,704 --> 00:04:00,841 line:-1
<c.magenta>他们属于英国最大的非盈利机构</c>


60
00:04:01,909 --> 00:04:04,144 line:-1
<c.magenta>使用Apple Pay后</c>


61
00:04:04,211 --> 00:04:09,783 line:-1
<c.magenta>捐赠时间从2分钟降至10秒钟</c>


62
00:04:09,850 --> 00:04:11,451 line:-1
<c.magenta>这一降幅相当可观</c>


63
00:04:11,785 --> 00:04:15,622 line:-2
<c.magenta>因此 他们实现了更好的</c>
<c.magenta>用户体验和性能表现</c>


64
00:04:17,089 --> 00:04:20,928 line:-2
<c.magenta>如果作为非营利机构</c>
<c.magenta>现在有兴趣使用Apple Pay</c>


65
00:04:21,161 --> 00:04:22,362 line:-1
<c.magenta>可以很轻松地实现</c>


66
00:04:22,963 --> 00:04:25,666 line:-1
<c.magenta>可以在你们的应用和网站上使用</c>


67
00:04:26,099 --> 00:04:30,671 line:-2
<c.magenta>为方便对此的支持 我们在Apple Pay</c>
<c.magenta>的按键设计方面 新增了捐赠功能</c>


68
00:04:31,305 --> 00:04:33,373 line:-1
<c.magenta>有着非常简便的注册步骤</c>


69
00:04:33,674 --> 00:04:35,809 line:-1
<c.magenta>大家可以在开发者网站上</c>


70
00:04:35,876 --> 00:04:38,445 line:-1
<c.magenta>了解相关支持和如何开始等详细内容</c>


71
00:04:40,914 --> 00:04:42,516 line:-1
<c.magenta>若你还未使用Apple Pay</c>


72
00:04:42,683 --> 00:04:46,753 line:-2
<c.magenta>可能会觉得为什么要</c>
<c.magenta>在应用或网站上使用这一功能</c>


73
00:04:48,755 --> 00:04:51,992 line:-2
<c.magenta>Apple Pay是最佳的</c>
<c.magenta>用户支付途径之一</c>


74
00:04:52,159 --> 00:04:56,630 line:-2
<c.magenta>在所有钱包中 它获得</c>
<c.magenta>最高的客户满意度评分</c>


75
00:04:56,930 --> 00:04:59,800 line:-1
<c.magenta>但它也是商家收款的最佳途径</c>


76
00:05:00,334 --> 00:05:04,838 line:-2
<c.magenta>根据典型的产品流程</c>
<c.magenta>来为大家做出形象的说明</c>


77
00:05:06,173 --> 00:05:09,776 line:-1
<c.magenta>通常在结账环节 我们购买产品</c>


78
00:05:09,843 --> 00:05:11,578 line:-1
<c.magenta>我们前往网站 获取应用</c>


79
00:05:11,745 --> 00:05:14,882 line:-1
<c.magenta>看到相关产品 加入购物车</c>


80
00:05:15,282 --> 00:05:16,517 line:-1
<c.magenta>然后去结账</c>


81
00:05:17,084 --> 00:05:18,952 line:-1
<c.magenta>通常首先需要</c>


82
00:05:19,319 --> 00:05:21,722 line:-1
<c.magenta>创建账户或是登录</c>


83
00:05:22,422 --> 00:05:25,926 line:-1
<c.magenta>如果没有账户 也许我就得新建一个</c>


84
00:05:26,260 --> 00:05:28,495 line:-1
<c.magenta>然后前往邮箱去验证</c>


85
00:05:28,862 --> 00:05:30,364 line:-1
<c.magenta>所以 我需要离开网站</c>


86
00:05:30,597 --> 00:05:33,534 line:-1
<c.magenta>然后再返回 还要填写发货地址</c>


87
00:05:34,368 --> 00:05:36,203 line:-1
<c.magenta>填好发货地址后</c>


88
00:05:36,537 --> 00:05:39,339 line:-1
<c.magenta>就要安排发货</c>


89
00:05:39,406 --> 00:05:43,076 line:-2
<c.magenta>信用卡会用我的家庭住址作为账单地址</c>
<c.magenta>那么还要添加账单地址</c>


90
00:05:43,710 --> 00:05:46,013 line:-1
<c.magenta>还要输入信用卡的信息</c>


91
00:05:46,513 --> 00:05:49,149 line:-1
<c.magenta>我还得把信用卡拿过来</c>


92
00:05:49,216 --> 00:05:52,886 line:-1
<c.magenta>把卡片背面的CVV号码输入</c>


93
00:05:53,554 --> 00:05:55,989 line:-1
<c.magenta>接着要检查整个交易过程</c>


94
00:05:56,757 --> 00:05:59,059 line:-1
<c.magenta>最后才能确认付款</c>


95
00:05:59,826 --> 00:06:03,363 line:-2
<c.magenta>如果你做过任何电子商务工作</c>
<c.magenta>不足为奇</c>


96
00:06:03,597 --> 00:06:06,767 line:-1
<c.magenta>转化率是要面对的一大问题</c>


97
00:06:07,000 --> 00:06:09,803 line:-1
<c.magenta>用户在购买期间会不断流失</c>


98
00:06:10,571 --> 00:06:13,307 line:-2
<c.magenta>可是使用Apple Pay</c>
<c.magenta>则会简单许多</c>


99
00:06:13,907 --> 00:06:18,178 line:-2
<c.magenta>只需点击Apple Pay的购买键</c>
<c.magenta>即可搞定</c>


100
00:06:18,245 --> 00:06:22,616 line:-1
<c.magenta>所有这些步骤都合并为单一用户体验</c>


101
00:06:23,016 --> 00:06:27,654 line:-1
<c.magenta>这可以大幅提高性能表现</c>


102
00:06:28,989 --> 00:06:31,758 line:-1
<c.magenta>在过去三年间 我们一直在问商家</c>


103
00:06:31,925 --> 00:06:33,560 line:-1
<c.magenta>对Apple Pay的意见如何</c>


104
00:06:33,927 --> 00:06:35,696 line:-1
<c.magenta>据他们讲 使用Apple Pay</c>


105
00:06:35,762 --> 00:06:39,166 line:-1
<c.magenta>可将转换率提升2至5倍</c>


106
00:06:39,766 --> 00:06:42,002 line:-1
<c.magenta>购买频率则出现上升</c>


107
00:06:42,469 --> 00:06:45,339 line:-1
<c.magenta>结账速度大幅提高</c>


108
00:06:45,806 --> 00:06:47,407 line:-1
<c.magenta>上述三方面因素使得</c>


109
00:06:48,008 --> 00:06:51,411 line:-1
<c.magenta>客户获取和满意度均得以提升</c>


110
00:06:52,045 --> 00:06:54,147 line:-1
<c.magenta>用户更容易成为客户</c>


111
00:06:54,248 --> 00:06:56,116 line:-1
<c.magenta>也更容易获得满足</c>


112
00:06:57,251 --> 00:06:59,253 line:-1
<c.magenta>我来举几个例子</c>


113
00:06:59,753 --> 00:07:02,923 line:-2
<c.magenta>如果是自由职业者或承包商</c>
<c.magenta>可能会知道Intuit</c>


114
00:07:02,990 --> 00:07:06,193 line:-2
<c.magenta>他们有一款应用和服务</c>
<c.magenta>可帮助生成发票</c>


115
00:07:06,360 --> 00:07:10,097 line:-2
<c.magenta>他们就使用了Apple Pay</c>
<c.magenta>可以直接为发票付款</c>


116
00:07:10,264 --> 00:07:13,834 line:-2
<c.magenta>结果使用Apple Pay</c>
<c.magenta>发票的支付速度提高了30%</c>


117
00:07:14,134 --> 00:07:16,336 line:-1
<c.magenta>其中半数在收到发票当天</c>


118
00:07:16,403 --> 00:07:17,838 line:-1
<c.magenta>即刻完成付款</c>


119
00:07:18,138 --> 00:07:21,508 line:-2
<c.magenta>我以前做过自由职业 这种事情</c>
<c.magenta>在我做自由职业时 完全没听说过</c>


120
00:07:23,210 --> 00:07:26,513 line:-2
<c.magenta>还有一款应用也大获成功</c>
<c.magenta>就是Indiegogo</c>


121
00:07:27,114 --> 00:07:31,585 line:0
<c.magenta>他们使用了Apple Pay</c>
<c.magenta>可以通过它在其中申请项目</c>


122
00:07:31,652 --> 00:07:35,322 line:0
<c.magenta>结果转换率提升了250%</c>


123
00:07:36,456 --> 00:07:40,127 line:-1
<c.magenta>除了转化率之外 还有其他的优势</c>


124
00:07:41,028 --> 00:07:44,998 line:-1
<c.magenta>许多商家发现退款的情况减少了</c>


125
00:07:45,632 --> 00:07:48,468 line:-2
<c.magenta>这很重要 如果大家接触过</c>
<c.magenta>这个问题 就知道这可能会造价不菲</c>


126
00:07:48,535 --> 00:07:50,003 line:-1
<c.magenta>还耗时耗力</c>


127
00:07:50,838 --> 00:07:52,873 line:-1
<c.magenta>也许 使用Apple Pay</c>


128
00:07:53,207 --> 00:07:56,977 line:-2
<c.magenta>最重要的是不必再去处理</c>
<c.magenta>或保存信用卡号码</c>


129
00:07:58,245 --> 00:08:01,682 line:-2
<c.magenta>这很了不起啊 你不必再去处理</c>
<c.magenta>常规的信用卡号码</c>


130
00:08:01,748 --> 00:08:04,585 line:-1
<c.magenta>只需处理具体设备的代码即可</c>


131
00:08:05,552 --> 00:08:07,721 line:-1
<c.magenta>还可获得可靠的用户体验</c>


132
00:08:07,988 --> 00:08:09,923 line:-1
<c.magenta>不必前往五个不同站点</c>


133
00:08:09,990 --> 00:08:12,259 line:-1
<c.magenta>完成五种截然不同的结账方式</c>


134
00:08:12,459 --> 00:08:17,197 line:-2
<c.magenta>你有着可信赖使用的单独UI</c>
<c.magenta>不过是直接构建在Safari或iOS中</c>


135
00:08:20,033 --> 00:08:23,871 line:-2
<c.magenta>那么希望诸位</c>
<c.magenta>若尚未使用Apple Pay</c>


136
00:08:24,171 --> 00:08:27,541 line:-2
<c.magenta>那么在演讲后可以立即</c>
<c.magenta>将它放在自己的网站上</c>


137
00:08:28,075 --> 00:08:30,177 line:-1
<c.magenta>我为大家提些建议</c>


138
00:08:30,410 --> 00:08:33,113 line:-1
<c.magenta>关于如何完善Apple Pay体验</c>


139
00:08:33,847 --> 00:08:36,015 line:-1
<c.magenta>当考虑Apple Pay的设计时</c>


140
00:08:36,082 --> 00:08:39,253 line:-1
<c.magenta>主要要看三个基本原则</c>


141
00:08:39,820 --> 00:08:42,089 line:-1
<c.magenta>怎样使得购买更便捷？</c>


142
00:08:42,823 --> 00:08:45,459 line:-1
<c.magenta>怎样加快购买速度？</c>


143
00:08:45,993 --> 00:08:48,629 line:-1
<c.magenta>怎样让购买过程更清晰？</c>


144
00:08:49,496 --> 00:08:51,265 line:-1
<c.magenta>当结合所有这些因素后</c>


145
00:08:51,498 --> 00:08:55,002 line:-1
<c.magenta>就会实现出色的设计和卓越的用户体验</c>


146
00:08:55,169 --> 00:08:57,471 line:-1
<c.magenta>如果你来我们的网站 就会看到</c>


147
00:08:57,638 --> 00:09:01,508 line:-1
<c.magenta>关于如何完善这些方面的三个术语</c>


148
00:09:01,575 --> 00:09:03,644 line:-1
<c.magenta>其中包括我们称之为的溯及上游</c>


149
00:09:04,378 --> 00:09:07,714 line:-1
<c.magenta>在界面指南的技术中 还包括默认</c>


150
00:09:08,448 --> 00:09:12,052 line:-2
<c.magenta>我们的界面指南中</c>
<c.magenta>还有第三种技术即流线化</c>


151
00:09:12,586 --> 00:09:16,757 line:-1
<c.magenta>我会依次介绍 希望对大家有所帮助</c>


152
00:09:18,325 --> 00:09:21,261 line:-1
<c.magenta>溯及上游是关于加速</c>


153
00:09:21,328 --> 00:09:25,098 line:-2
<c.magenta>单项产品购买的过程</c>
<c.magenta>直接在产品页面使用Apple Pay</c>


154
00:09:25,599 --> 00:09:29,203 line:-2
<c.magenta>我们通过快速结账</c>
<c.magenta>加快多项产品的购买过程</c>


155
00:09:29,736 --> 00:09:31,572 line:-1
<c.magenta>举个例子</c>


156
00:09:32,172 --> 00:09:35,142 line:-1
<c.magenta>我住在旧金山 显然需要</c>


157
00:09:35,209 --> 00:09:38,212 line:-1
<c.magenta>屯一些连帽衣来穿</c>


158
00:09:38,879 --> 00:09:42,316 line:-1
<c.magenta>于是来到Lululemon的网站 购买连帽衣</c>


159
00:09:42,516 --> 00:09:47,120 line:-2
<c.magenta>在产品页面上 直接有</c>
<c.magenta>Apple Pay按钮可以购买</c>


160
00:09:47,988 --> 00:09:50,524 line:-2
<c.magenta>直接把Apple Pay按钮</c>
<c.magenta>放在你的产品页面上</c>


161
00:09:50,591 --> 00:09:54,895 line:-1
<c.magenta>这样可以极大提高转化率 数量级很高</c>


162
00:09:54,962 --> 00:09:58,031 line:-1
<c.magenta>这样便于立即购买</c>


163
00:10:00,033 --> 00:10:04,505 line:-2
<c.magenta>同样 如果允许不创建账户</c>
<c.magenta>直接购买 就像这样</c>


164
00:10:04,738 --> 00:10:06,573 line:-1
<c.magenta>那效果会更好</c>


165
00:10:08,475 --> 00:10:13,447 line:-1
<c.magenta>有时 客户结账并不可行</c>


166
00:10:14,848 --> 00:10:18,418 line:-1
<c.magenta>但是有些方法可以帮你缓解这种情况</c>


167
00:10:18,986 --> 00:10:23,657 line:-2
<c.magenta>首先 可以将账户创建无缝写入</c>
<c.magenta>iOS和macOS中</c>


168
00:10:24,091 --> 00:10:27,661 line:-1
<c.magenta>一种方法是通过共享网站证书</c>


169
00:10:28,295 --> 00:10:30,564 line:-1
<c.magenta>这在几年前介绍过 在iOS 11中</c>


170
00:10:30,631 --> 00:10:33,634 line:-1
<c.magenta>共享网站证书已有诸多不错的改进</c>


171
00:10:33,867 --> 00:10:37,304 line:-2
<c.magenta>一定要看看Safari的演讲</c>
<c.magenta>了解更多详情</c>


172
00:10:37,871 --> 00:10:43,377 line:-2
<c.magenta>还可以使用iOS 11中的新特性</c>
<c.magenta>原生应用自动填充功能</c>


173
00:10:43,944 --> 00:10:48,048 line:-2
<c.magenta>iOS 11现在可以在应用内</c>
<c.magenta>自动填充密码</c>


174
00:10:48,115 --> 00:10:52,586 line:-2
<c.magenta>充分利用这一点 只需要</c>
<c.magenta>示意UI文本域的位置即可</c>


175
00:10:52,753 --> 00:10:57,624 line:-2
<c.magenta>提供正确的UI文本内容类型：</c>
<c.magenta>密码 电邮等等</c>


176
00:10:59,092 --> 00:11:01,728 line:-1
<c.magenta>还可以在付款后 生成账户</c>


177
00:11:01,795 --> 00:11:06,233 line:-2
<c.magenta>使用从Apple Pay</c>
<c.magenta>搜集到的数据即可 例如用户电邮</c>


178
00:11:06,300 --> 00:11:09,536 line:-1
<c.magenta>可以在购买发生时 即刻创建账户</c>


179
00:11:11,171 --> 00:11:14,441 line:-1
<c.magenta>我提到的第二种技术是默认功能</c>


180
00:11:15,075 --> 00:11:19,179 line:-2
<c.magenta>如果可能 这是将Apple Pay</c>
<c.magenta>作为默认的付款选项</c>


181
00:11:20,414 --> 00:11:22,816 line:-1
<c.magenta>大家还可以使用我们新增的特性</c>


182
00:11:22,883 --> 00:11:25,752 line:-1
<c.magenta>我稍后会介绍 即内联设置</c>


183
00:11:25,819 --> 00:11:28,388 line:-2
<c.magenta>这样就可以</c>
<c.magenta>即刻完成Apple Pay支付</c>


184
00:11:28,589 --> 00:11:32,426 line:-1
<c.magenta>即便用户在iOS设备中无卡也无妨</c>


185
00:11:35,329 --> 00:11:38,131 line:-1
<c.magenta>我刚提到的最后一种技术是流线化</c>


186
00:11:38,966 --> 00:11:43,237 line:-2
<c.magenta>这可以实现快捷简便地</c>
<c.magenta>使用Apple Pay付款</c>


187
00:11:44,304 --> 00:11:47,641 line:-1
<c.magenta>在结账前 就将必要信息搜集到位</c>


188
00:11:47,708 --> 00:11:51,678 line:-2
<c.magenta>如果需要特定的尺寸和颜色</c>
<c.magenta>一定在结账前确认才好</c>


189
00:11:52,112 --> 00:11:55,682 line:-2
<c.magenta>同样可以从Apple Pay</c>
<c.magenta>获取客户信息</c>


190
00:11:55,949 --> 00:11:58,752 line:-1
<c.magenta>不必亲自向用户索取电邮地址</c>


191
00:11:58,819 --> 00:12:01,755 line:-1
<c.magenta>在发货信息中</c>


192
00:12:01,822 --> 00:12:05,492 line:-2
<c.magenta>账单信息等 就有相应内容</c>
<c.magenta>可直接从Apple Pay表单中找到</c>


193
00:12:07,094 --> 00:12:10,931 line:-2
<c.magenta>说到Apple Pay表单</c>
<c.magenta>想必大家很熟悉</c>


194
00:12:11,164 --> 00:12:13,166 line:-1
<c.magenta>在Apple Store中是这样的</c>


195
00:12:13,467 --> 00:12:17,271 line:-2
<c.magenta>在大家考虑使用Apple Pay时</c>
<c.magenta>我有些一般性的建议</c>


196
00:12:17,337 --> 00:12:19,640 line:-1
<c.magenta>以及充分利用这张详单的方法</c>


197
00:12:20,974 --> 00:12:25,112 line:-1
<c.magenta>其一是只显示并要求关键信息</c>


198
00:12:26,046 --> 00:12:28,348 line:-1
<c.magenta>不要索取你不会使用的信息</c>


199
00:12:28,415 --> 00:12:31,752 line:-2
<c.magenta>如果你不需要用户的电话号码</c>
<c.magenta>就不要提出要求</c>


200
00:12:32,886 --> 00:12:36,690 line:-1
<c.magenta>还要记住一点 屏幕空间相当有限</c>


201
00:12:36,757 --> 00:12:37,925 line:-1
<c.magenta>并没有多大空间</c>


202
00:12:37,991 --> 00:12:40,527 line:-1
<c.magenta>所以条目文字要简洁有效</c>


203
00:12:41,195 --> 00:12:43,997 line:-1
<c.magenta>表单并非是要做成完整版的收据</c>


204
00:12:44,164 --> 00:12:46,366 line:-2
<c.magenta>Apple Pay表单</c>
<c.magenta>只起到汇总的作用</c>


205
00:12:46,700 --> 00:12:51,872 line:-2
<c.magenta>所以使用条目文字</c>
<c.magenta>来说明额外收费 折扣 税费等内容</c>


206
00:12:52,139 --> 00:12:54,441 line:-1
<c.magenta>再回到Apple Store</c>


207
00:12:54,508 --> 00:12:55,576 line:0
<c.magenta>给大家展示我所讲的意思</c>


208
00:12:56,076 --> 00:13:00,047 line:0
<c.magenta>这里大家会看到我买了iPad</c>
<c.magenta>在详单的这个位置</c>


209
00:13:00,113 --> 00:13:06,920 line:0
<c.magenta>我看到小计 发货情况 税费 总计</c>
<c.magenta>都是最简要的内容</c>


210
00:13:08,789 --> 00:13:12,826 line:-1
<c.magenta>有时 你不知道该收多少钱</c>


211
00:13:14,461 --> 00:13:17,531 line:-2
<c.magenta>也许你是一家共享单车公司</c>
<c.magenta>只有在骑行结束后才会收费</c>


212
00:13:17,598 --> 00:13:20,634 line:-1
<c.magenta>或者也许你希望添加</c>


213
00:13:20,701 --> 00:13:24,972 line:-2
<c.magenta>可选的赠品项</c>
<c.magenta>在交易结束后 用户可以选取</c>


214
00:13:25,839 --> 00:13:28,876 line:-1
<c.magenta>可以使用未确定项来实现这一目的</c>


215
00:13:29,176 --> 00:13:33,747 line:-2
<c.magenta>很重要的一点是需要清楚告知</c>
<c.magenta>这些未确定项需要另行付费</c>


216
00:13:34,715 --> 00:13:38,619 line:-1
<c.magenta>举个例子 我们把类型标为未处理</c>


217
00:13:39,553 --> 00:13:42,723 line:-2
<c.magenta>这样会在Apple Pay</c>
<c.magenta>表单上不显示金额</c>


218
00:13:44,491 --> 00:13:47,427 line:-1
<c.magenta>现在 总金额必须为非负值</c>


219
00:13:47,594 --> 00:13:50,697 line:-1
<c.magenta>如果付款金额出现负值 着实是说不通</c>


220
00:13:51,098 --> 00:13:52,466 line:-1
<c.magenta>但是可以是未确定的状态</c>


221
00:13:53,066 --> 00:13:55,402 line:-1
<c.magenta>这样 总金额在交易发生时</c>


222
00:13:55,636 --> 00:13:57,971 line:-1
<c.magenta>还尚不明确</c>


223
00:13:59,239 --> 00:14:02,442 line:-2
<c.magenta>很重要的一点是</c>
<c.magenta>在总金额一栏要使用公司名称</c>


224
00:14:02,509 --> 00:14:05,679 line:-2
<c.magenta>这在卡账中会有显示</c>
<c.magenta>这一点很重要有两方面原因</c>


225
00:14:06,113 --> 00:14:09,283 line:-1
<c.magenta>首先 用户希望可以识别</c>


226
00:14:09,349 --> 00:14:13,053 line:-2
<c.magenta>Wallet应用中和</c>
<c.magenta>自己银行对账单中的付款项目</c>


227
00:14:13,554 --> 00:14:16,857 line:-2
<c.magenta>同样 我们也支持Mac Book Pro</c>
<c.magenta>的最新触控条功能</c>


228
00:14:16,924 --> 00:14:20,494 line:-2
<c.magenta>我们实际上可以在触控条中</c>
<c.magenta>显示商家的名称</c>


229
00:14:21,128 --> 00:14:24,565 line:-2
<c.magenta>同样 确保这要符合用户预期</c>
<c.magenta>这很重要</c>


230
00:14:26,934 --> 00:14:29,503 line:-1
<c.magenta>使用Apple Pay订阅的情况</c>


231
00:14:29,570 --> 00:14:34,007 line:-1
<c.magenta>自去年起就开始提升 举例来说</c>


232
00:14:34,074 --> 00:14:38,011 line:-2
<c.magenta>新闻网站想用Apple Pay</c>
<c.magenta>完成订阅</c>


233
00:14:38,579 --> 00:14:41,582 line:-1
<c.magenta>当然可以这样做 但是我有几个建议</c>


234
00:14:42,115 --> 00:14:45,786 line:-2
<c.magenta>很重要的一点是</c>
<c.magenta>要在付款前明确订阅详情</c>


235
00:14:46,420 --> 00:14:50,657 line:-2
<c.magenta>要在条目栏重申账单的频率</c>
<c.magenta>这也很重要</c>


236
00:14:51,458 --> 00:14:54,962 line:-2
<c.magenta>对于可变的订阅内容</c>
<c.magenta>要使用未确定项</c>


237
00:14:55,128 --> 00:14:58,599 line:-1
<c.magenta>再举个例子 我有份小兼职</c>


238
00:14:58,765 --> 00:15:04,004 line:-2
<c.magenta>我在编写一个小应用</c>
<c.magenta>向天真的千禧一代销售牛油果吐司</c>


239
00:15:05,005 --> 00:15:07,307 line:-1
<c.magenta>就是这个 当然是需要预订</c>


240
00:15:07,374 --> 00:15:10,177 line:-2
<c.magenta>因为就是这样来解决</c>
<c.magenta>所有资金问题的 人家是这样告诉我的</c>


241
00:15:10,544 --> 00:15:12,145 line:-1
<c.magenta>这是我的Apple Pay表单</c>


242
00:15:12,779 --> 00:15:16,250 line:-2
<c.magenta>大家可以看到 这是每周的服务</c>
<c.magenta>这样在条目栏</c>


243
00:15:16,316 --> 00:15:20,220 line:-1
<c.magenta>我明确说明预订的时长</c>


244
00:15:20,687 --> 00:15:23,490 line:-2
<c.magenta>我还标注了折扣情况</c>
<c.magenta>你也可在表单上这么做</c>


245
00:15:23,557 --> 00:15:25,559 line:-1
<c.magenta>可以标明介绍性折扣</c>


246
00:15:25,859 --> 00:15:28,762 line:-1
<c.magenta>然后是当前要收取的费用</c>


247
00:15:29,296 --> 00:15:32,132 line:-2
<c.magenta>接下来可以使用相同的信息</c>
<c.magenta>相同的付款数据</c>


248
00:15:32,199 --> 00:15:35,169 line:-2
<c.magenta>这些可以从Apple Pay获取</c>
<c.magenta>进行后续收费</c>


249
00:15:36,570 --> 00:15:41,375 line:-1
<c.magenta>有时 有些预订类型费用会不一样</c>


250
00:15:41,909 --> 00:15:44,912 line:-1
<c.magenta>也许你是从事订餐服务 用户订餐数量</c>


251
00:15:44,978 --> 00:15:48,215 line:-1
<c.magenta>每周每月都不同</c>


252
00:15:49,082 --> 00:15:51,718 line:-1
<c.magenta>针对不同预订情况 使用未确定金额</c>


253
00:15:51,985 --> 00:15:55,389 line:-1
<c.magenta>还要记住 如果预订是可变的</c>


254
00:15:55,455 --> 00:15:57,958 line:-1
<c.magenta>例如用户改了主意</c>


255
00:15:58,025 --> 00:15:59,993 line:-1
<c.magenta>如果改变会导致额外费用</c>


256
00:16:00,394 --> 00:16:03,063 line:-1
<c.magenta>只需出示付款单即可</c>


257
00:16:03,764 --> 00:16:07,701 line:-1
<c.magenta>如果用户降低了费用 则必须要授权</c>


258
00:16:09,169 --> 00:16:10,571 line:-1
<c.magenta>这就是付款单部分</c>


259
00:16:11,805 --> 00:16:14,741 line:-1
<c.magenta>我想说说按钮部分</c>


260
00:16:15,475 --> 00:16:18,478 line:-2
<c.magenta>具体而言 我想说说</c>
<c.magenta>Apple Pay的按钮</c>


261
00:16:19,446 --> 00:16:24,284 line:-2
<c.magenta>请使用内置式Apple Pay按钮</c>
<c.magenta>不要自创</c>


262
00:16:24,351 --> 00:16:26,520 line:-1
<c.magenta>这是有两方面原因</c>


263
00:16:26,687 --> 00:16:29,256 line:-1
<c.magenta>首先 Apple Pay经过本地化</c>


264
00:16:29,423 --> 00:16:31,959 line:-1
<c.magenta>用户可以选用任何语言</c>


265
00:16:32,259 --> 00:16:34,995 line:-2
<c.magenta>而且还是矢量图</c>
<c.magenta>因此可以完全放大缩小</c>


266
00:16:35,062 --> 00:16:37,497 line:-1
<c.magenta>这样你完全不必担心它们的样貌</c>


267
00:16:38,165 --> 00:16:40,133 line:-1
<c.magenta>还有诸多样式可供选择</c>


268
00:16:40,534 --> 00:16:44,071 line:-2
<c.magenta>我们先推出了iOS 8.3中的</c>
<c.magenta>原生按钮</c>


269
00:16:44,271 --> 00:16:46,673 line:-1
<c.magenta>所以可以锁定8.3及以上的版本</c>


270
00:16:46,874 --> 00:16:49,877 line:-1
<c.magenta>在商店中几乎都有</c>


271
00:16:51,178 --> 00:16:57,818 line:-2
<c.magenta>在macOS 10.12.1和iOS 10.1中</c>
<c.magenta>我们使之更易于在网络使用</c>


272
00:16:58,585 --> 00:17:01,421 line:-1
<c.magenta>我们用了简化的CSS样式</c>


273
00:17:01,889 --> 00:17:04,590 line:-1
<c.magenta>我们来看几个例子 代码实例</c>


274
00:17:05,759 --> 00:17:08,262 line:-1
<c.magenta>这里是Swift中的代码不太好</c>


275
00:17:08,829 --> 00:17:13,133 line:-2
<c.magenta>PKPaymentButton是UI按钮子类</c>
<c.magenta>你只需提供类型和样式</c>


276
00:17:13,467 --> 00:17:17,804 line:-2
<c.magenta>我们的按钮有白色 黑色</c>
<c.magenta>和白色加边框等</c>


277
00:17:18,638 --> 00:17:21,074 line:-1
<c.magenta>我们来看在HTML中的相同按钮</c>


278
00:17:22,175 --> 00:17:25,979 line:-2
<c.magenta>这是最新的CSS样式</c>
<c.magenta>在iOS 10.1中推出</c>


279
00:17:26,946 --> 00:17:32,152 line:-2
<c.magenta>这里是WebKit外观样式</c>
<c.magenta>Apple Pay按钮和类型购买</c>


280
00:17:33,120 --> 00:17:36,356 line:-2
<c.magenta>现在 我们有四种按钮样式</c>
<c.magenta>我来给大家看看</c>


281
00:17:37,291 --> 00:17:42,462 line:-2
<c.magenta>左边是Swift符号</c>
<c.magenta>右边是CSS名称</c>


282
00:17:42,729 --> 00:17:44,331 line:-1
<c.magenta>我们有无背景色按钮</c>


283
00:17:45,666 --> 00:17:48,068 line:-1
<c.magenta>还有通过Apple Pay购买按钮</c>


284
00:17:49,369 --> 00:17:54,241 line:0
<c.magenta>还有设置Apple Pay按钮</c>
<c.magenta>稍后会介绍具体用法</c>


285
00:17:55,008 --> 00:17:59,546 line:0
<c.magenta>以及iOS 10.2</c>
<c.magenta>和macOS 10.12.3中的新特性</c>


286
00:17:59,613 --> 00:18:02,249 line:0
<c.magenta>如果你是非盈利机构</c>
<c.magenta>我们有使用Apple Pay捐赠的按钮</c>


287
00:18:02,616 --> 00:18:05,452 line:-1
<c.magenta>显然作为非营利机构 在此之前</c>


288
00:18:05,786 --> 00:18:08,055 line:-2
<c.magenta>你可能要锁定</c>
<c.magenta>所有版本的iOS或macOS</c>


289
00:18:08,522 --> 00:18:11,892 line:-1
<c.magenta>这样就回到了常规的无背景色按钮</c>


290
00:18:13,493 --> 00:18:16,463 line:-2
<c.magenta>这是对过去一年Apple Pay的</c>
<c.magenta>快速更新</c>


291
00:18:16,530 --> 00:18:19,032 line:-1
<c.magenta>回顾了部分最佳实践</c>


292
00:18:20,234 --> 00:18:22,836 line:-1
<c.magenta>我想告诉大家本次演讲最棒的部分</c>


293
00:18:23,170 --> 00:18:25,739 line:-1
<c.magenta>即Apple Pay的最新特性</c>


294
00:18:27,608 --> 00:18:31,211 line:-2
<c.magenta>当我们在思考 今年使用</c>
<c.magenta>Apple Pay可以做些什么时</c>


295
00:18:31,278 --> 00:18:35,883 line:-2
<c.magenta>我们在想 怎样才能</c>
<c.magenta>实现同类产品中最佳的转化率</c>


296
00:18:36,717 --> 00:18:40,521 line:-2
<c.magenta>以及怎样帮助用户解决</c>
<c.magenta>他们反映的常见问题</c>


297
00:18:41,588 --> 00:18:45,559 line:-2
<c.magenta>最后是怎样才能快速便捷地</c>
<c.magenta>开始使用Apple Pay</c>


298
00:18:45,626 --> 00:18:47,561 line:-1
<c.magenta>这样 更多的潜在客户</c>


299
00:18:47,628 --> 00:18:49,763 line:-1
<c.magenta>会在其设备上绑定卡片</c>


300
00:18:51,999 --> 00:18:54,535 line:-1
<c.magenta>在接下来的几张幻灯片中就会谈到</c>


301
00:18:54,601 --> 00:18:56,303 line:-1
<c.magenta>我们实现这些目的的部分做法</c>


302
00:18:56,670 --> 00:18:59,072 line:-1
<c.magenta>首先是通过设置Apple Pay</c>


303
00:19:00,340 --> 00:19:03,076 line:-1
<c.magenta>现场从这个版本的iOS开始</c>


304
00:19:03,143 --> 00:19:05,379 line:-1
<c.magenta>我们强烈推荐在硬件方面</c>


305
00:19:05,445 --> 00:19:08,582 line:-2
<c.magenta>适用Apple Pay的所有设备上</c>
<c.magenta>都显示Apple Pay按钮</c>


306
00:19:09,049 --> 00:19:13,253 line:-2
<c.magenta>可以选择适合</c>
<c.magenta>自己需求的设置或购买按钮</c>


307
00:19:13,520 --> 00:19:16,557 line:-1
<c.magenta>如果API告知用户并无任何卡片</c>


308
00:19:16,623 --> 00:19:19,726 line:-1
<c.magenta>如果设计中更适合始终连到购买功能中</c>


309
00:19:19,793 --> 00:19:21,562 line:-1
<c.magenta>你也可显示设置功能</c>


310
00:19:22,930 --> 00:19:24,831 line:-1
<c.magenta>但我们介绍过的一些内容会很有帮助</c>


311
00:19:24,898 --> 00:19:29,036 line:-2
<c.magenta>提出这个新建议是因为</c>
<c.magenta>我们现在支持内联设置</c>


312
00:19:29,736 --> 00:19:32,539 line:-1
<c.magenta>Apple Pay设置可以自动提供</c>


313
00:19:33,340 --> 00:19:37,611 line:-2
<c.magenta>如果想在之前版本的</c>
<c.magenta>iOS中显示Apple Pay详单</c>


314
00:19:37,678 --> 00:19:40,647 line:-1
<c.magenta>如果用户并无任何卡片 这会导致错误</c>


315
00:19:40,714 --> 00:19:43,584 line:-1
<c.magenta>实际上 你无法显示视图控制器</c>


316
00:19:43,851 --> 00:19:47,354 line:-2
<c.magenta>现在你可以展示</c>
<c.magenta>或是展示Apple Pay设置功能</c>


317
00:19:47,721 --> 00:19:50,224 line:-1
<c.magenta>更重要的是 用户可以在</c>


318
00:19:50,724 --> 00:19:53,327 line:-1
<c.magenta>设置完成后 即刻返回购买环节</c>


319
00:19:53,594 --> 00:19:56,597 line:-1
<c.magenta>也就是说要比手动结账快很多</c>


320
00:19:56,663 --> 00:19:59,066 line:-2
<c.magenta>无论是添加Apple Pay卡片</c>
<c.magenta>还是完成购买均是如此</c>


321
00:19:59,132 --> 00:20:01,635 line:-1
<c.magenta>我给大家展示一下具体情况</c>


322
00:20:02,035 --> 00:20:03,637 line:-1
<c.magenta>来看会有多快</c>


323
00:20:04,037 --> 00:20:06,373 line:-1
<c.magenta>这里是Apple Store</c>


324
00:20:06,673 --> 00:20:08,642 line:-1
<c.magenta>这次是在网站里 不是在应用中</c>


325
00:20:09,076 --> 00:20:12,346 line:-2
<c.magenta>在我们轻击购买按钮而没有卡时</c>
<c.magenta>看看会发生什么</c>


326
00:20:12,412 --> 00:20:14,982 line:-1
<c.magenta>速度很快</c>


327
00:20:17,518 --> 00:20:19,820 line:-1
<c.magenta>这样有个小对话 告知我们添加卡片</c>


328
00:20:20,053 --> 00:20:21,355 line:-1
<c.magenta>我们来添加卡片</c>


329
00:20:24,858 --> 00:20:28,629 line:-2
<c.magenta>这是我在另一部电话中用的卡</c>
<c.magenta>所以已经有卡了</c>


330
00:20:28,962 --> 00:20:30,531 line:-1
<c.magenta>我只要输入安全码即可</c>


331
00:20:32,699 --> 00:20:35,802 line:-1
<c.magenta>现在来添加卡片 通读条款规定</c>


332
00:20:39,806 --> 00:20:42,743 line:-1
<c.magenta>然后添加到Wallet 激活卡片</c>


333
00:20:44,444 --> 00:20:45,445 line:-1
<c.magenta>好的 搞定</c>


334
00:20:45,812 --> 00:20:46,813 line:-1
<c.magenta>接下来会发生什么？</c>


335
00:20:46,880 --> 00:20:49,149 line:-1
<c.magenta>我们立即前往Apple Pay表单</c>


336
00:20:49,216 --> 00:20:50,851 line:-1
<c.magenta>就可以继续付款</c>


337
00:20:51,084 --> 00:20:51,952 line:-1
<c.magenta>非常棒</c>


338
00:20:52,019 --> 00:20:54,988 line:-1
<c.magenta>其实用不了30秒钟 的确要比</c>


339
00:20:55,055 --> 00:20:57,624 line:-1
<c.magenta>手动输入卡号快了很多</c>


340
00:20:57,691 --> 00:20:59,526 line:-2
<c.magenta>所有这些信息都在常规的</c>
<c.magenta>Apple Store结账单中</c>


341
00:21:00,460 --> 00:21:02,429 line:-1
<c.magenta>而且 这些都是完全自动进行</c>


342
00:21:02,496 --> 00:21:05,832 line:-1
<c.magenta>你不必修改任何代码 没有新添API</c>


343
00:21:06,133 --> 00:21:09,736 line:-2
<c.magenta>如果用户没有卡片</c>
<c.magenta>你只需要显示Apple Pay即可</c>


344
00:21:10,037 --> 00:21:12,673 line:-1
<c.magenta>所以我建议大家使用这个功能</c>


345
00:21:14,575 --> 00:21:16,176 line:-1
<c.magenta>如果你在Keynote平台</c>


346
00:21:16,243 --> 00:21:19,580 line:-2
<c.magenta>或是在线观看</c>
<c.magenta>有个内容可能会让你开心</c>


347
00:21:19,847 --> 00:21:21,248 line:-1
<c.magenta>即Apple Pay Cash</c>


348
00:21:22,449 --> 00:21:27,855 line:-2
<c.magenta>Apple Pay Cash可以实现向</c>
<c.magenta>iMessage的好友用户发送现金的功能</c>


349
00:21:28,121 --> 00:21:31,725 line:-2
<c.magenta>你收到的钱会保存在</c>
<c.magenta>Apple Pay Cash中</c>


350
00:21:32,359 --> 00:21:36,196 line:-2
<c.magenta>Apple Pay Cash现可在</c>
<c.magenta>商店 实体店中使用</c>


351
00:21:36,496 --> 00:21:40,467 line:-2
<c.magenta>但是也可以在应用当中</c>
<c.magenta>在网上使用 和其他卡片一样</c>


352
00:21:40,734 --> 00:21:45,973 line:-2
<c.magenta>实际上 可以用信用卡的地方</c>
<c.magenta>就可以用Apple Pay Cash</c>


353
00:21:46,206 --> 00:21:49,142 line:-1
<c.magenta>我们稍后会在开发人员网站上</c>


354
00:21:49,209 --> 00:21:51,278 line:-1
<c.magenta>详细介绍大家需要做的内容</c>


355
00:21:51,512 --> 00:21:53,680 line:-1
<c.magenta>不过请放心 如果带着信用卡</c>


356
00:21:53,747 --> 00:21:56,517 line:-2
<c.magenta>使用Apple Pay Cash</c>
<c.magenta>基本不费什么事</c>


357
00:21:57,251 --> 00:22:00,521 line:-2
<c.magenta>如果作为软件内付费或网站开发人员</c>
<c.magenta>关于Apple Pay Cash</c>


358
00:22:00,587 --> 00:22:02,656 line:-1
<c.magenta>有些内容还是需要了解</c>


359
00:22:04,324 --> 00:22:08,061 line:-2
<c.magenta>Apple Pay Cash</c>
<c.magenta>是储值卡 其中要有余额</c>


360
00:22:09,196 --> 00:22:11,131 line:-1
<c.magenta>来看个例子</c>


361
00:22:11,398 --> 00:22:13,734 line:-1
<c.magenta>我的预订商务模式效果不好</c>


362
00:22:13,800 --> 00:22:17,237 line:-1
<c.magenta>所以我转换到按需模式</c>


363
00:22:17,304 --> 00:22:20,707 line:-1
<c.magenta>这样可以把牛油果吐司直接送到你手上</c>


364
00:22:21,408 --> 00:22:22,409 line:-1
<c.magenta>这样的话</c>


365
00:22:22,476 --> 00:22:24,811 line:-1
<c.magenta>我的零钱快用完了</c>


366
00:22:25,312 --> 00:22:28,081 line:-2
<c.magenta>不过 我想用</c>
<c.magenta>Apple Pay Cash卡来付费</c>


367
00:22:28,148 --> 00:22:30,017 line:-1
<c.magenta>可惜 我的好友不多</c>


368
00:22:30,083 --> 00:22:31,818 line:-1
<c.magenta>他们没给我发来钱</c>


369
00:22:31,885 --> 00:22:35,789 line:-1
<c.magenta>你就会看到这个UI 表示余额不足</c>


370
00:22:36,256 --> 00:22:40,160 line:-1
<c.magenta>要注意的是 我们在用提供的总金额</c>


371
00:22:40,227 --> 00:22:43,263 line:-1
<c.magenta>来确定付款是否会</c>


372
00:22:43,497 --> 00:22:44,631 line:-1
<c.magenta>通过Apple Pay Cash发生</c>


373
00:22:44,898 --> 00:22:46,834 line:-1
<c.magenta>这表明 你的总金额要体现出收费情况</c>


374
00:22:46,900 --> 00:22:50,103 line:-1
<c.magenta>这一点很重要</c>


375
00:22:50,470 --> 00:22:52,840 line:-1
<c.magenta>只有在余额超过所需总金额时</c>


376
00:22:53,106 --> 00:22:56,844 line:-1
<c.magenta>Apple Pay Cash才会有效</c>


377
00:22:58,245 --> 00:23:01,882 line:-2
<c.magenta>如果不确定总金额</c>
<c.magenta>可以使用未确定金额</c>


378
00:23:02,382 --> 00:23:04,785 line:-1
<c.magenta>使用未确定金额绕过这个环节</c>


379
00:23:04,852 --> 00:23:07,020 line:-1
<c.magenta>无论怎样 我们都会让付款完成</c>


380
00:23:07,087 --> 00:23:08,689 line:-1
<c.magenta>当然要注意 和所有储值卡一样</c>


381
00:23:08,755 --> 00:23:12,693 line:-1
<c.magenta>如果用户卡中没有余额 就会遭拒</c>


382
00:23:14,661 --> 00:23:17,631 line:-1
<c.magenta>我们来简单介绍一下新的API功能</c>


383
00:23:18,565 --> 00:23:21,502 line:-2
<c.magenta>人们常会问我们</c>
<c.magenta>一种使用情况 特别是在欧洲</c>


384
00:23:21,568 --> 00:23:24,972 line:-2
<c.magenta>是关于在部分国家</c>
<c.magenta>限制使用Apple Pay的功能</c>


385
00:23:25,172 --> 00:23:28,342 line:-1
<c.magenta>有时 这需要满足法规合规性要求</c>


386
00:23:28,742 --> 00:23:29,743 line:-1
<c.magenta>现在可以了</c>


387
00:23:30,210 --> 00:23:34,014 line:-2
<c.magenta>只需要这个新的属性</c>
<c.magenta>supportedCountries</c>


388
00:23:34,648 --> 00:23:36,617 line:-1
<c.magenta>即可设置希望限制使用的国家</c>


389
00:23:37,017 --> 00:23:40,187 line:-1
<c.magenta>注意 我们其他的现有API一样</c>


390
00:23:40,254 --> 00:23:43,257 line:-1
<c.magenta>你可以限制对信用卡或借记卡的使用</c>


391
00:23:43,657 --> 00:23:45,826 line:-1
<c.magenta>这在任何一种单一卡片中都不会有</c>


392
00:23:45,893 --> 00:23:47,294 line:-1
<c.magenta>所以要牢记</c>


393
00:23:47,361 --> 00:23:50,731 line:-1
<c.magenta>欲知更多详情 去看去年的演讲内容</c>


394
00:23:53,400 --> 00:23:54,568 line:-1
<c.magenta>现在来说说</c>


395
00:23:54,635 --> 00:23:56,837 line:-2
<c.magenta>我们对Apple Pay</c>
<c.magenta>所做的最大改变</c>


396
00:23:57,037 --> 00:23:59,573 line:-1
<c.magenta>这与错误处理相关</c>


397
00:24:01,675 --> 00:24:06,914 line:-2
<c.magenta>很遗憾 有时候</c>
<c.magenta>Apple Pay也会出故障</c>


398
00:24:07,581 --> 00:24:11,084 line:-1
<c.magenta>这就导致与用户沟通会出现问题</c>


399
00:24:11,451 --> 00:24:14,821 line:-2
<c.magenta>我们从开发人员</c>
<c.magenta>从用户那里都会得到反馈</c>


400
00:24:15,289 --> 00:24:17,357 line:-1
<c.magenta>有什么具体例子呢？</c>


401
00:24:18,525 --> 00:24:20,661 line:-1
<c.magenta>无法处理付款工具</c>


402
00:24:21,595 --> 00:24:24,965 line:-1
<c.magenta>账单地址与卡片的银行地址不符</c>


403
00:24:25,365 --> 00:24:27,201 line:-1
<c.magenta>电邮地址无效</c>


404
00:24:27,801 --> 00:24:31,038 line:-1
<c.magenta>邮寄地址的邮编不正确</c>


405
00:24:31,672 --> 00:24:34,541 line:-1
<c.magenta>电话的地区代码缺失</c>


406
00:24:35,242 --> 00:24:37,811 line:-1
<c.magenta>我们把问题分为两大类</c>


407
00:24:38,312 --> 00:24:43,951 line:-1
<c.magenta>我们将之分为致命错误和非致命错误</c>


408
00:24:45,219 --> 00:24:46,386 line:-1
<c.magenta>致命错误是指</c>


409
00:24:46,453 --> 00:24:49,156 line:-1
<c.magenta>用户当时无法解决的错误</c>


410
00:24:49,223 --> 00:24:51,692 line:-1
<c.magenta>需要在Apple Pay以外进行处理</c>


411
00:24:51,758 --> 00:24:53,861 line:-1
<c.magenta>但是也并无法避免</c>


412
00:24:54,328 --> 00:24:55,762 line:-1
<c.magenta>有什么具体例子么？</c>


413
00:24:56,263 --> 00:24:58,232 line:-1
<c.magenta>用户超出了信用限度</c>


414
00:24:58,966 --> 00:25:01,301 line:-1
<c.magenta>这就无法在Apple Pay内解决</c>


415
00:25:01,368 --> 00:25:03,971 line:-1
<c.magenta>你需要去银行搞定</c>


416
00:25:04,037 --> 00:25:07,641 line:-2
<c.magenta>但是许多问题并非致命</c>
<c.magenta>用户可以自行解决</c>


417
00:25:08,242 --> 00:25:10,811 line:-1
<c.magenta>问题可以在Apple Pay内部解决</c>


418
00:25:11,178 --> 00:25:13,614 line:-1
<c.magenta>有时 问题可以预见 可以防患未然</c>


419
00:25:15,282 --> 00:25:17,317 line:-1
<c.magenta>但是在更早版本的iOS中</c>


420
00:25:17,551 --> 00:25:20,554 line:-1
<c.magenta>有关具体问题的交流 有些难度</c>


421
00:25:21,255 --> 00:25:24,258 line:-1
<c.magenta>每当在原生API中完成付款</c>


422
00:25:24,324 --> 00:25:28,061 line:-2
<c.magenta>就需要返回</c>
<c.magenta>PKPaymentAuthorizationStatus Enum</c>


423
00:25:28,529 --> 00:25:33,066 line:-2
<c.magenta>在网络API中 需要具备类似的Enum</c>
<c.magenta>这其中并无特殊性</c>


424
00:25:33,467 --> 00:25:37,538 line:-2
<c.magenta>比如是无效的发货地址</c>
<c.magenta>无效账单 无效联系方式等</c>


425
00:25:38,605 --> 00:25:40,674 line:-1
<c.magenta>因此 用户不清楚问题是什么</c>


426
00:25:40,741 --> 00:25:42,943 line:-1
<c.magenta>不过即便用户知道问题出在哪里</c>


427
00:25:43,010 --> 00:25:45,846 line:-1
<c.magenta>他们也无法编辑现有值</c>


428
00:25:46,713 --> 00:25:50,150 line:-1
<c.magenta>他们只能选用新地址 或是输入其中</c>


429
00:25:50,751 --> 00:25:53,587 line:-1
<c.magenta>这种体验可不怎么样 我们做出了调整</c>


430
00:25:53,654 --> 00:25:55,422 line:-1
<c.magenta>我们从三方面进行了调整</c>


431
00:25:55,889 --> 00:25:59,826 line:-2
<c.magenta>首先 我们引入新的指南</c>
<c.magenta>可以更好处理用户数据</c>


432
00:26:00,661 --> 00:26:04,464 line:-2
<c.magenta>我们还推出全新UI</c>
<c.magenta>这样用户可以输入和编辑数据</c>


433
00:26:04,531 --> 00:26:07,467 line:-2
<c.magenta>如果大家用过iOS Veetle</c>
<c.magenta>也许会见过这个</c>


434
00:26:07,835 --> 00:26:10,270 line:-1
<c.magenta>最后 也许是最令人激动的是</c>


435
00:26:10,337 --> 00:26:12,072 line:-1
<c.magenta>我们推出新的API</c>


436
00:26:12,339 --> 00:26:15,642 line:-1
<c.magenta>可以告知具体错误 指出问题所在</c>


437
00:26:16,710 --> 00:26:18,779 line:-1
<c.magenta>我们来具体说说</c>


438
00:26:19,947 --> 00:26:21,715 line:-1
<c.magenta>先来看处理用户数据</c>


439
00:26:22,716 --> 00:26:23,617 line:-1
<c.magenta>这很有趣</c>


440
00:26:24,284 --> 00:26:28,622 line:-2
<c.magenta>iOS和macOS中的联系信息</c>
<c.magenta>可以来自不同的渠道</c>


441
00:26:29,022 --> 00:26:32,759 line:-2
<c.magenta>可以是来自iCloud</c>
<c.magenta>也可以是手动输入</c>


442
00:26:33,260 --> 00:26:38,031 line:-2
<c.magenta>但也可来自LinkedIn、Facebook</c>
<c.magenta>VIDO、Tencent</c>


443
00:26:38,098 --> 00:26:39,433 line:-1
<c.magenta>可以来自任何地方</c>


444
00:26:40,167 --> 00:26:44,037 line:-1
<c.magenta>别指望这些信息会符合你的业务逻辑</c>


445
00:26:45,305 --> 00:26:46,406 line:-1
<c.magenta>为什么这么讲？</c>


446
00:26:46,974 --> 00:26:49,576 line:-1
<c.magenta>就以邮编地址为例</c>


447
00:26:49,843 --> 00:26:52,679 line:-2
<c.magenta>这是波士顿的一家Apple商店地址</c>
<c.magenta>这是家很棒的Apple商店</c>


448
00:26:52,746 --> 00:26:55,148 line:-2
<c.magenta>你应该去看看 打个招呼</c>
<c.magenta>告诉他们是我让你去的</c>


449
00:26:56,450 --> 00:27:00,053 line:-1
<c.magenta>目前 地址看似没问题</c>


450
00:27:00,120 --> 00:27:02,589 line:-1
<c.magenta>如果写在信封上 丢进邮箱</c>


451
00:27:02,656 --> 00:27:03,657 line:-1
<c.magenta>信件也能寄到</c>


452
00:27:04,124 --> 00:27:06,760 line:-1
<c.magenta>但实际上还是存在几个问题</c>


453
00:27:06,994 --> 00:27:08,595 line:-1
<c.magenta>会让不知情的开发人员遇到</c>


454
00:27:10,130 --> 00:27:12,499 line:-1
<c.magenta>有些看似不是什么大问题</c>


455
00:27:12,566 --> 00:27:13,834 line:-1
<c.magenta>街道是缩写形式</c>


456
00:27:14,334 --> 00:27:16,937 line:-1
<c.magenta>看似大部分系统可以应付</c>


457
00:27:17,337 --> 00:27:20,007 line:-1
<c.magenta>有些问题有些麻烦</c>


458
00:27:20,874 --> 00:27:23,577 line:-1
<c.magenta>如果你很认真 也许会注意到</c>


459
00:27:23,644 --> 00:27:26,313 line:-1
<c.magenta>马萨诸塞州拼错了 有两个字母T</c>


460
00:27:26,713 --> 00:27:29,550 line:-1
<c.magenta>我在这里住了四年 还是总拼错</c>


461
00:27:29,850 --> 00:27:33,153 line:-2
<c.magenta>如果是根据州名</c>
<c.magenta>进行准确字符串匹配</c>


462
00:27:33,854 --> 00:27:35,355 line:-1
<c.magenta>这可能就会引发问题</c>


463
00:27:35,422 --> 00:27:38,192 line:-1
<c.magenta>还有一点比较奇怪 就是邮编</c>


464
00:27:38,559 --> 00:27:41,361 line:-1
<c.magenta>是邮编再加四位数</c>


465
00:27:41,895 --> 00:27:45,465 line:-2
<c.magenta>是在常规邮编基础上外加四位数码</c>
<c.magenta>进行细化</c>


466
00:27:46,233 --> 00:27:49,469 line:-1
<c.magenta>如果后端系统只处理五位数字</c>


467
00:27:49,536 --> 00:27:52,773 line:-1
<c.magenta>如果数据库只能接受五个数字</c>


468
00:27:52,840 --> 00:27:54,975 line:-1
<c.magenta>这方面就会出现问题</c>


469
00:27:56,143 --> 00:27:59,479 line:-1
<c.magenta>国家可能也会引发问题</c>


470
00:28:01,515 --> 00:28:05,452 line:-2
<c.magenta>这是个本地化的国家名称</c>
<c.magenta>其实另有一栏</c>


471
00:28:05,519 --> 00:28:07,754 line:-1
<c.magenta>用户看不见 这就是国家代码</c>


472
00:28:07,821 --> 00:28:08,889 line:-1
<c.magenta>你应该用到这个信息</c>


473
00:28:08,956 --> 00:28:12,092 line:-1
<c.magenta>因为国家代码一般都是正确的</c>


474
00:28:12,826 --> 00:28:14,494 line:-1
<c.magenta>在用户的语言中有体现</c>


475
00:28:14,561 --> 00:28:17,464 line:-2
<c.magenta>你可能会这样</c>
<c.magenta>“好 我会进行字串匹配</c>


476
00:28:17,531 --> 00:28:19,833 line:-1
<c.magenta>美国 USA 所有变体等”</c>


477
00:28:19,900 --> 00:28:22,035 line:-1
<c.magenta>结果没想到 用户是法国人</c>


478
00:28:22,469 --> 00:28:26,373 line:-2
<c.magenta>这里实际是les Etats-Unis</c>
<c.magenta>你不知该怎么办了</c>


479
00:28:26,440 --> 00:28:27,875 line:-1
<c.magenta>所以不要使用国家</c>


480
00:28:27,941 --> 00:28:29,076 line:-1
<c.magenta>使用国家代码</c>


481
00:28:29,776 --> 00:28:32,179 line:-1
<c.magenta>电话号码也会经常出问题</c>


482
00:28:32,679 --> 00:28:33,580 line:-1
<c.magenta>其中会有斜杠</c>


483
00:28:33,647 --> 00:28:35,115 line:-1
<c.magenta>如果系统只设置成</c>


484
00:28:35,182 --> 00:28:37,718 line:-1
<c.magenta>接受数字 就会产生问题</c>


485
00:28:37,918 --> 00:28:42,289 line:-1
<c.magenta>还有国家代码 也容易出错</c>


486
00:28:43,190 --> 00:28:44,958 line:-1
<c.magenta>所以要准备应对模糊输入</c>


487
00:28:45,292 --> 00:28:49,396 line:-1
<c.magenta>不要强迫用户遵照你的业务逻辑</c>


488
00:28:49,663 --> 00:28:52,833 line:-1
<c.magenta>有许多办法可以用来解决地址问题</c>


489
00:28:53,100 --> 00:28:56,336 line:-1
<c.magenta>例如 不要直接使用州栏</c>


490
00:28:56,403 --> 00:28:58,372 line:-1
<c.magenta>可以从邮编中推导出来</c>


491
00:28:58,705 --> 00:28:59,606 line:-1
<c.magenta>这是个例子</c>


492
00:28:59,773 --> 00:29:02,709 line:-1
<c.magenta>有许多工具可以帮助处理电话号码</c>


493
00:29:02,776 --> 00:29:06,146 line:-2
<c.magenta>两种工具在iOS中都有</c>
<c.magenta>还有第三方工具</c>


494
00:29:06,780 --> 00:29:09,683 line:-2
<c.magenta>你也许奇怪“为什么</c>
<c.magenta>Apple Pay不能替我做好呢？”</c>


495
00:29:09,750 --> 00:29:11,351 line:-1
<c.magenta>你的业务逻辑</c>


496
00:29:11,552 --> 00:29:14,488 line:-1
<c.magenta>也许和另一个商家的业务逻辑完全不同</c>


497
00:29:14,555 --> 00:29:17,624 line:-2
<c.magenta>一个商家也许只接受</c>
<c.magenta>带有国家代码的电话号码</c>


498
00:29:17,925 --> 00:29:20,661 line:-2
<c.magenta>另一个商家也许只接受</c>
<c.magenta>不带国家代码的电话号码</c>


499
00:29:21,061 --> 00:29:23,297 line:-1
<c.magenta>你不会希望用户不得已要</c>


500
00:29:23,363 --> 00:29:25,866 line:-1
<c.magenta>创建两套地址 两套电话号码</c>


501
00:29:25,966 --> 00:29:28,969 line:-1
<c.magenta>所以不要强迫用户遵照你的业务逻辑</c>


502
00:29:29,937 --> 00:29:31,138 line:-1
<c.magenta>现在我们来帮帮你</c>


503
00:29:31,205 --> 00:29:32,573 line:-1
<c.magenta>这是新的API</c>


504
00:29:32,639 --> 00:29:35,609 line:-2
<c.magenta>位于上下文框架之中</c>
<c.magenta>可以支持世界各地的地址</c>


505
00:29:35,776 --> 00:29:37,711 line:-1
<c.magenta>我提供的例子中 你是来自美国</c>


506
00:29:37,778 --> 00:29:40,447 line:-2
<c.magenta>但是这些问题实际上</c>
<c.magenta>会在世界各地都有发生</c>


507
00:29:40,514 --> 00:29:42,282 line:-1
<c.magenta>联系信息中还有新的栏</c>


508
00:29:42,349 --> 00:29:45,319 line:-1
<c.magenta>用于补充性子街道</c>


509
00:29:45,552 --> 00:29:47,187 line:-1
<c.magenta>这特别适合中国的情况</c>


510
00:29:47,721 --> 00:29:49,456 line:-1
<c.magenta>在日本 使用Apple Pay</c>


511
00:29:49,523 --> 00:29:52,459 line:-2
<c.magenta>除了常规名之外</c>
<c.magenta>你还可以要求提供拼音名</c>


512
00:29:52,893 --> 00:29:54,928 line:-1
<c.magenta>这是另一个重要补充</c>


513
00:29:55,662 --> 00:29:58,799 line:-2
<c.magenta>不过尽管所有这些</c>
<c.magenta>尽管已经做了最好的努力</c>


514
00:29:59,666 --> 00:30:01,068 line:-1
<c.magenta>还是会出现问题</c>


515
00:30:02,035 --> 00:30:05,405 line:-2
<c.magenta>美国邮政管理局可以把这寄给圣诞老人</c>
<c.magenta>但我可不行</c>


516
00:30:05,572 --> 00:30:07,140 line:-1
<c.magenta>我不知道他住在哪儿</c>


517
00:30:08,108 --> 00:30:10,410 line:-1
<c.magenta>那么是什么会出现问题呢？</c>


518
00:30:10,577 --> 00:30:13,313 line:-1
<c.magenta>电话号码可能会缺失数字</c>


519
00:30:13,714 --> 00:30:16,450 line:-1
<c.magenta>邮编可能 会对不上号</c>


520
00:30:16,850 --> 00:30:18,719 line:-1
<c.magenta>电邮拼写会有误</c>


521
00:30:19,253 --> 00:30:21,688 line:-1
<c.magenta>邮寄地址可能不能用</c>


522
00:30:22,689 --> 00:30:26,293 line:-1
<c.magenta>我们会引入新的API来帮你解决问题</c>


523
00:30:26,527 --> 00:30:28,629 line:-1
<c.magenta>我们称之为自定义错误</c>


524
00:30:30,197 --> 00:30:34,468 line:-2
<c.magenta>自定义错误可以帮你优雅地处理</c>
<c.magenta>Apple Pay中的无效或有误数据</c>


525
00:30:34,868 --> 00:30:37,871 line:-1
<c.magenta>你也可以显示自定义错误信息</c>


526
00:30:37,938 --> 00:30:40,774 line:-2
<c.magenta>你自己的错误信息</c>
<c.magenta>直接会体现在Apple Pay表单中</c>


527
00:30:41,341 --> 00:30:45,779 line:-1
<c.magenta>可以引导用户到需要改正的具体栏目</c>


528
00:30:46,680 --> 00:30:49,550 line:-1
<c.magenta>再来看我那讨喜的牛油果吐司应用</c>


529
00:30:50,017 --> 00:30:53,320 line:-1
<c.magenta>交付无法实现 我返回预订部分</c>


530
00:30:53,587 --> 00:30:55,389 line:-1
<c.magenta>我们准备进行A轮融资了</c>


531
00:30:55,989 --> 00:30:58,458 line:-1
<c.magenta>在这里可以看到 发货地址有问题</c>


532
00:30:58,525 --> 00:31:00,327 line:-1
<c.magenta>发货地址错误</c>


533
00:31:02,095 --> 00:31:04,598 line:-1
<c.magenta>不是很清晰 不过如果是用户输入的</c>


534
00:31:04,932 --> 00:31:06,200 line:-1
<c.magenta>你会看到 我们遇到</c>


535
00:31:06,266 --> 00:31:09,269 line:-1
<c.magenta>应用提供的自定义错误</c>


536
00:31:09,469 --> 00:31:11,438 line:-1
<c.magenta>邮编和城市不匹配</c>


537
00:31:12,206 --> 00:31:14,474 line:-1
<c.magenta>如果进一步来看 我们其实标出</c>


538
00:31:14,541 --> 00:31:17,778 line:-1
<c.magenta>需要用户更正的具体栏目</c>


539
00:31:17,845 --> 00:31:21,014 line:-1
<c.magenta>稍后在Jon的演示中 大家会看到</c>


540
00:31:22,850 --> 00:31:25,085 line:-1
<c.magenta>这就有了不幸的副作用</c>


541
00:31:25,152 --> 00:31:27,754 line:-1
<c.magenta>API部分功能不宜使用</c>


542
00:31:28,021 --> 00:31:29,723 line:-2
<c.magenta>以往Apple Pay所采用的</c>
<c.magenta>所有的完成处理器</c>


543
00:31:30,390 --> 00:31:33,527 line:-1
<c.magenta>我刚说过 是Enum</c>


544
00:31:34,161 --> 00:31:35,462 line:-1
<c.magenta>我们不想为每种错误类型都</c>


545
00:31:35,529 --> 00:31:37,998 line:-1
<c.magenta>对应出数百种不同的Enum</c>


546
00:31:38,599 --> 00:31:41,235 line:-1
<c.magenta>相反 我们用对象来替代</c>


547
00:31:42,002 --> 00:31:42,870 line:-1
<c.magenta>在本例中</c>


548
00:31:42,936 --> 00:31:45,973 line:-1
<c.magenta>当付款得以授权 会有回调</c>


549
00:31:46,039 --> 00:31:48,742 line:-2
<c.magenta>且会返回</c>
<c.magenta>PKPaymentAuthorizationResult</c>


550
00:31:49,977 --> 00:31:51,812 line:-1
<c.magenta>我们只需稍稍改名</c>


551
00:31:53,146 --> 00:31:57,651 line:-1
<c.magenta>结果对象包括状态 包括一组错误</c>


552
00:31:58,151 --> 00:32:00,420 line:-1
<c.magenta>目前的状态就是你习惯的状态</c>


553
00:32:00,487 --> 00:32:02,122 line:-1
<c.magenta>付款是否成功</c>


554
00:32:02,556 --> 00:32:04,791 line:-1
<c.magenta>举例而言 你成功收到付款</c>


555
00:32:04,858 --> 00:32:08,829 line:-1
<c.magenta>只需返回无误的结果和单一的状态组</c>


556
00:32:09,663 --> 00:32:13,534 line:-2
<c.magenta>不过错误本身是标准的NS错误</c>
<c.magenta>说明是什么问题</c>


557
00:32:14,368 --> 00:32:17,271 line:0
<c.magenta>每个错误代表一个付款问题</c>


558
00:32:17,671 --> 00:32:19,273 line:0
<c.magenta>可以把错误串在一起</c>


559
00:32:19,339 --> 00:32:22,109 line:0
<c.magenta>这样就不止一个 如果用户的电邮错误</c>


560
00:32:22,176 --> 00:32:25,445 line:0
<c.magenta>电话错误 发货地址错误</c>
<c.magenta>可以一次处理</c>


561
00:32:26,413 --> 00:32:29,583 line:0
<c.magenta>可以使用NSError代码</c>
<c.magenta>说明这个问题</c>


562
00:32:30,083 --> 00:32:35,088 line:0
<c.magenta>NSError的用户信息键</c>
<c.magenta>会提供具体解决步骤和相关信息</c>


563
00:32:36,123 --> 00:32:39,426 line:0
<c.magenta>创建NSError会有些费事</c>


564
00:32:39,493 --> 00:32:43,397 line:0
<c.magenta>部分工厂辅助帮手可以帮忙</c>


565
00:32:43,630 --> 00:32:45,265 line:-1
<c.magenta>这里是Swift的例子</c>


566
00:32:45,566 --> 00:32:48,335 line:-2
<c.magenta>我在创建一个付款发货地址</c>
<c.magenta>其中有无效错误</c>


567
00:32:48,635 --> 00:32:52,372 line:-1
<c.magenta>你会看到 会用到两个属性 两个参数</c>


568
00:32:52,639 --> 00:32:57,344 line:-2
<c.magenta>用到CN联系代码</c>
<c.magenta>表明这个栏目有问题</c>


569
00:32:57,544 --> 00:32:58,946 line:-1
<c.magenta>在本例中 问题是</c>


570
00:32:59,012 --> 00:33:02,149 line:-2
<c.magenta>用户填写的国家信息有误</c>
<c.magenta>我们只能发送到美国</c>


571
00:33:02,216 --> 00:33:06,587 line:-2
<c.magenta>来看CN邮寄地址的国家代码</c>
<c.magenta>再看本地化说明</c>


572
00:33:06,753 --> 00:33:10,524 line:-1
<c.magenta>这属于本地化错误 在表单中有显示</c>


573
00:33:10,757 --> 00:33:14,461 line:-2
<c.magenta>在ES6和JavaScript中</c>
<c.magenta>显然不存在NSError</c>


574
00:33:14,795 --> 00:33:18,498 line:-2
<c.magenta>我们有了新的类型</c>
<c.magenta>Apple Pay Error</c>


575
00:33:19,566 --> 00:33:21,268 line:-1
<c.magenta>可以查看是否存在这一类型</c>


576
00:33:21,335 --> 00:33:24,571 line:-2
<c.magenta>以便确认是否Safari</c>
<c.magenta>会支持这款新的API</c>


577
00:33:25,038 --> 00:33:29,276 line:-1
<c.magenta>你会提供错误类型 发货联系方式无效</c>


578
00:33:30,110 --> 00:33:33,514 line:-1
<c.magenta>相关的栏目 国家和本地化说明</c>


579
00:33:34,581 --> 00:33:37,918 line:-1
<c.magenta>大部分的代理回调都经过调整</c>


580
00:33:38,418 --> 00:33:41,154 line:-2
<c.magenta>这还有个例子</c>
<c.magenta>didSelectShippingContract</c>


581
00:33:41,221 --> 00:33:45,359 line:-2
<c.magenta>会用到对象 PKPaymentRequest</c>
<c.magenta>ShippingContactUpdate</c>


582
00:33:46,994 --> 00:33:50,130 line:-2
<c.magenta>正如Safari 11中</c>
<c.magenta>已有的API那样</c>


583
00:33:50,664 --> 00:33:54,368 line:-2
<c.magenta>Safari 11只存在于iOS 11</c>
<c.magenta>和macOS High Sierra中</c>


584
00:33:54,434 --> 00:33:57,404 line:-2
<c.magenta>并不支持在Safari 11</c>
<c.magenta>更早的操作系统</c>


585
00:33:57,704 --> 00:33:58,939 line:-1
<c.magenta>版本中运行</c>


586
00:33:59,773 --> 00:34:02,042 line:-1
<c.magenta>因为JavaScript宽容度更高</c>


587
00:34:02,109 --> 00:34:04,077 line:-1
<c.magenta>涉及到API时</c>


588
00:34:04,144 --> 00:34:06,613 line:-1
<c.magenta>我们还尚未发现功能受影响的情况</c>


589
00:34:06,680 --> 00:34:09,716 line:-1
<c.magenta>现有的完成函数主要是出现过载问题</c>


590
00:34:09,783 --> 00:34:14,188 line:0
<c.magenta>这是早先的API</c>
<c.magenta>我们在单独项中进行解析</c>


591
00:34:14,454 --> 00:34:16,723 line:0
<c.magenta>总金额 条目 状态</c>


592
00:34:16,924 --> 00:34:20,159 line:0
<c.magenta>在新的API中 我们只需传递对象</c>


593
00:34:20,393 --> 00:34:22,329 line:0
<c.magenta>如果是在网上编写Apple Pay</c>


594
00:34:22,396 --> 00:34:24,764 line:0
<c.magenta>这里是很直接的改动</c>


595
00:34:24,831 --> 00:34:27,201 line:-1
<c.magenta>若是在应用中编写Apple Pay</c>


596
00:34:27,734 --> 00:34:31,804 line:-2
<c.magenta>我想要展示 实施这个</c>
<c.magenta>新的API并不需要太多工作</c>


597
00:34:32,239 --> 00:34:34,541 line:-1
<c.magenta>为此 有请Jon上台</c>


598
00:34:34,775 --> 00:34:37,945 line:-2
<c.magenta>他会简单介绍如何迁移</c>
<c.magenta>Apple Pay应用</c>


599
00:34:38,212 --> 00:34:39,112 line:-1
<c.magenta>Jon</c>


600
00:34:43,150 --> 00:34:43,984 line:-1
<c.magenta>大家好</c>


601
00:34:44,051 --> 00:34:46,386 line:-1
<c.magenta>我是Jon 我来给大家演示</c>


602
00:34:46,719 --> 00:34:51,091 line:-2
<c.magenta>在Swift中升级现有Apple Pay项目</c>
<c.magenta>针对新的API其实很简单</c>


603
00:34:51,658 --> 00:34:54,393 line:-1
<c.magenta>今天我会主要介绍四方面内容</c>


604
00:34:54,962 --> 00:34:57,965 line:-1
<c.magenta>首先 来看现有项目代码</c>


605
00:34:58,265 --> 00:35:00,033 line:-1
<c.magenta>来看目前的执行情况</c>


606
00:35:00,334 --> 00:35:02,302 line:-1
<c.magenta>如果以前用过Apple Pay</c>


607
00:35:02,369 --> 00:35:04,838 line:-1
<c.magenta>大部分内容 你都会很熟悉</c>


608
00:35:05,205 --> 00:35:07,407 line:-1
<c.magenta>其次 我会在模拟器中部署应用</c>


609
00:35:07,674 --> 00:35:11,745 line:-2
<c.magenta>与Apple Pay表单互动</c>
<c.magenta>就仿佛自己是你的应用客户一般</c>


610
00:35:12,112 --> 00:35:14,781 line:-1
<c.magenta>会将一个物品发送给朋友</c>


611
00:35:15,482 --> 00:35:20,354 line:-1
<c.magenta>接下来 我会升级新API中的代码</c>


612
00:35:20,587 --> 00:35:23,991 line:-1
<c.magenta>展示三个错误 这是我们今年引入的</c>


613
00:35:24,458 --> 00:35:27,361 line:-1
<c.magenta>最后 我会再次在模拟器中部署应用</c>


614
00:35:27,594 --> 00:35:29,663 line:-1
<c.magenta>并展示做法方面有何不同</c>


615
00:35:29,863 --> 00:35:32,599 line:-2
<c.magenta>比较旧版的Apple Pay</c>
<c.magenta>表单和新版的Apple Pay表单</c>


616
00:35:33,267 --> 00:35:35,169 line:-1
<c.magenta>来看我们现在有什么</c>


617
00:35:36,436 --> 00:35:38,672 line:-1
<c.magenta>如你所见 这个应用相当简单</c>


618
00:35:38,739 --> 00:35:41,708 line:-1
<c.magenta>有个物品的图像 我们想买下来</c>


619
00:35:42,342 --> 00:35:44,344 line:-1
<c.magenta>以及Apple Pay购买按钮</c>


620
00:35:44,811 --> 00:35:46,246 line:-1
<c.magenta>来看代码部分</c>


621
00:35:47,114 --> 00:35:49,149 line:-1
<c.magenta>第一个函数是viewDidLoad</c>


622
00:35:49,550 --> 00:35:52,186 line:-2
<c.magenta>这里 我们创建了</c>
<c.magenta>PKPayment按钮</c>


623
00:35:52,586 --> 00:35:57,357 line:-2
<c.magenta>设置购买类型 以及样式为黑色</c>
<c.magenta>并将之加在视图中</c>


624
00:35:57,791 --> 00:36:02,763 line:-2
<c.magenta>在添加视图函数中</c>
<c.magenta>我们加入不同的约束项</c>


625
00:36:03,030 --> 00:36:04,665 line:-1
<c.magenta>并设置目标</c>


626
00:36:05,065 --> 00:36:08,001 line:-2
<c.magenta>点击时 会有下一个</c>
<c.magenta>函数startPayment</c>


627
00:36:08,502 --> 00:36:10,003 line:-1
<c.magenta>我们来看一下</c>


628
00:36:11,505 --> 00:36:13,073 line:-1
<c.magenta>这里 首先要做的是</c>


629
00:36:13,440 --> 00:36:18,512 line:-2
<c.magenta>创建若干PKPayment汇总项</c>
<c.magenta>以及PKShipping方法</c>


630
00:36:19,079 --> 00:36:22,716 line:-1
<c.magenta>最后要创建的是一系列对象</c>


631
00:36:23,016 --> 00:36:25,619 line:-1
<c.magenta>稍后会传递到PKPayment要求中</c>


632
00:36:26,653 --> 00:36:28,856 line:-1
<c.magenta>再来看付款要求</c>


633
00:36:29,756 --> 00:36:32,359 line:-1
<c.magenta>非常简单 我们启动后</c>


634
00:36:32,726 --> 00:36:36,463 line:-1
<c.magenta>在之前创建的项目中 设置付款汇总项</c>


635
00:36:36,830 --> 00:36:38,565 line:-1
<c.magenta>以及各种属性</c>


636
00:36:38,999 --> 00:36:43,270 line:-1
<c.magenta>例如商家识别器 性能等等</c>


637
00:36:44,638 --> 00:36:47,674 line:-1
<c.magenta>最后 最后一行可能是最重要的</c>


638
00:36:47,741 --> 00:36:49,910 line:-1
<c.magenta>要求发货联系栏</c>


639
00:36:50,611 --> 00:36:53,313 line:-1
<c.magenta>这是PKPayment要求的新属性</c>


640
00:36:53,981 --> 00:36:56,917 line:-1
<c.magenta>这里是一组PK内容栏</c>


641
00:36:57,251 --> 00:36:58,218 line:-1
<c.magenta>在本例中</c>


642
00:36:58,285 --> 00:37:01,822 line:-1
<c.magenta>开发人员要求用户提供电邮地址</c>


643
00:37:02,155 --> 00:37:03,624 line:-1
<c.magenta>以及邮寄地址</c>


644
00:37:04,424 --> 00:37:06,360 line:-1
<c.magenta>在这个函数中 最后一项是</c>


645
00:37:06,426 --> 00:37:09,363 line:-1
<c.magenta>创建PKPayment授权控制器</c>


646
00:37:09,830 --> 00:37:11,899 line:-1
<c.magenta>使用我们刚创建的付款要求</c>


647
00:37:12,332 --> 00:37:14,935 line:-1
<c.magenta>为自己设置委托并呈现</c>


648
00:37:15,636 --> 00:37:16,870 line:-1
<c.magenta>相当简单</c>


649
00:37:17,638 --> 00:37:19,640 line:-1
<c.magenta>来看一下协议部分</c>


650
00:37:20,574 --> 00:37:21,909 line:-1
<c.magenta>第一个函数是</c>


651
00:37:22,176 --> 00:37:24,244 line:-1
<c.magenta>didSelectShippingContact</c>


652
00:37:24,745 --> 00:37:28,048 line:-2
<c.magenta>一旦出现Apple Pay表单</c>
<c.magenta>就会调用这个函数</c>


653
00:37:28,549 --> 00:37:32,019 line:-1
<c.magenta>一旦用户编辑其地址内容</c>


654
00:37:32,252 --> 00:37:33,620 line:-1
<c.magenta>或选用新地址时也是如此</c>


655
00:37:34,354 --> 00:37:36,323 line:-1
<c.magenta>可以看到这是一款较早版本的API</c>


656
00:37:36,390 --> 00:37:40,694 line:-2
<c.magenta>因为这个完成块采用了</c>
<c.magenta>PKPaymentAuthorizationStatus Enum</c>


657
00:37:41,428 --> 00:37:44,264 line:-1
<c.magenta>还要注意的是这个联系信息</c>


658
00:37:44,464 --> 00:37:45,732 line:-1
<c.magenta>其实经过了修订</c>


659
00:37:46,099 --> 00:37:50,504 line:-1
<c.magenta>你不会获得电邮地址 电话号码</c>


660
00:37:50,838 --> 00:37:54,074 line:-2
<c.magenta>或街道信息等</c>
<c.magenta>除非得到用户的支付授权</c>


661
00:37:55,976 --> 00:37:57,578 line:-1
<c.magenta>来看我们这里</c>


662
00:37:58,245 --> 00:38:01,148 line:-1
<c.magenta>我们要进行基本的验证 在本例中</c>


663
00:38:01,315 --> 00:38:03,317 line:-1
<c.magenta>我们要检查状态是否有效</c>


664
00:38:03,750 --> 00:38:04,751 line:-1
<c.magenta>如果无效</c>


665
00:38:04,818 --> 00:38:07,654 line:-2
<c.magenta>我们将状态设为</c>
<c.magenta>invalidShippingPostalAddress</c>


666
00:38:08,155 --> 00:38:10,624 line:-1
<c.magenta>否则 我们将付款状态设为成功</c>


667
00:38:11,358 --> 00:38:13,794 line:-1
<c.magenta>最后要处理的是完成块</c>


668
00:38:13,861 --> 00:38:17,364 line:-2
<c.magenta>通过paymentStatus</c>
<c.magenta>相同的发货方式</c>


669
00:38:17,564 --> 00:38:19,233 line:-1
<c.magenta>以及相同的支付汇总项</c>


670
00:38:19,766 --> 00:38:21,935 line:-1
<c.magenta>当然可以更新发货方式</c>


671
00:38:22,002 --> 00:38:23,971 line:-1
<c.magenta>以及汇总项 如果有必要的话</c>


672
00:38:24,471 --> 00:38:27,007 line:-1
<c.magenta>但是在本例中 我们都用相同内容</c>


673
00:38:28,342 --> 00:38:31,745 line:-2
<c.magenta>下一个函数是</c>
<c.magenta>didAuthorizePaymentMethod</c>


674
00:38:32,112 --> 00:38:33,680 line:-1
<c.magenta>在用户授权付款后可以调用</c>


675
00:38:33,747 --> 00:38:37,551 line:-1
<c.magenta>可使用Touch ID或密码来授权</c>


676
00:38:38,018 --> 00:38:41,321 line:-2
<c.magenta>还要注意的一点是</c>
<c.magenta>PKPayment对象</c>


677
00:38:41,722 --> 00:38:46,860 line:-2
<c.magenta>其中包含属性发货联系信息</c>
<c.magenta>内有完整联系信息</c>


678
00:38:47,227 --> 00:38:50,364 line:-2
<c.magenta>这样就获得了电邮地址</c>
<c.magenta>电话和街道信息</c>


679
00:38:50,597 --> 00:38:52,332 line:-1
<c.magenta>这些是之前未曾提供的</c>


680
00:38:52,633 --> 00:38:54,301 line:-1
<c.magenta>我们希望你可以在这种方法中</c>


681
00:38:54,368 --> 00:38:56,937 line:-1
<c.magenta>验证完整的联系信息</c>


682
00:38:58,305 --> 00:39:01,275 line:-1
<c.magenta>为简单起见 我们只需检查电邮</c>


683
00:39:01,475 --> 00:39:02,910 line:-1
<c.magenta>但是当然你可以做更多检查</c>


684
00:39:03,076 --> 00:39:05,179 line:-1
<c.magenta>如果邮件检查失败</c>


685
00:39:05,512 --> 00:39:10,284 line:-2
<c.magenta>我们将支付状态设为</c>
<c.magenta>Enum invalidShippingContact</c>


686
00:39:11,318 --> 00:39:14,655 line:-1
<c.magenta>如果成功 我们将付款状态设为成功</c>


687
00:39:15,122 --> 00:39:18,192 line:-1
<c.magenta>最后要做的是 调用该状态的完成块</c>


688
00:39:18,258 --> 00:39:19,793 line:-1
<c.magenta>我们来看具体怎么操作</c>


689
00:39:19,860 --> 00:39:23,463 line:-2
<c.magenta>先要部署 并在模拟器中</c>
<c.magenta>与Apple Pay表单互动</c>


690
00:39:25,832 --> 00:39:26,934 line:-1
<c.magenta>再来看应用</c>


691
00:39:27,401 --> 00:39:30,771 line:-2
<c.magenta>点击Apple Pay购买按钮</c>
<c.magenta>出现Apple Pay表单</c>


692
00:39:30,838 --> 00:39:33,507 line:-1
<c.magenta>假设要发货给我的朋友莎拉</c>


693
00:39:34,074 --> 00:39:37,911 line:-1
<c.magenta>我选择发货后 选择添加发货地址</c>


694
00:39:38,312 --> 00:39:44,051 line:-1
<c.magenta>如你所见 最新UI添加了发货地址</c>


695
00:39:44,551 --> 00:39:48,322 line:-1
<c.magenta>这样可以手动添加或选择一个联系方式</c>


696
00:39:48,622 --> 00:39:53,927 line:-2
<c.magenta>或使用Apple Pay表单</c>
<c.magenta>提供的建议地址</c>


697
00:39:54,394 --> 00:39:57,231 line:-1
<c.magenta>在本例中 我会选择朋友莎拉</c>


698
00:39:57,631 --> 00:39:59,466 line:-1
<c.magenta>她住在夏威夷</c>


699
00:39:59,533 --> 00:40:03,036 line:-1
<c.magenta>也许…这个地址会有问题</c>


700
00:40:03,103 --> 00:40:03,937 line:-1
<c.magenta>不过我们来看</c>


701
00:40:04,304 --> 00:40:07,741 line:-1
<c.magenta>当然有问题 可以看到</c>


702
00:40:08,308 --> 00:40:10,110 line:-1
<c.magenta>文字是红色 这样用户可以知道</c>


703
00:40:10,177 --> 00:40:12,279 line:-1
<c.magenta>地址存在问题</c>


704
00:40:12,779 --> 00:40:15,148 line:-1
<c.magenta>不过尚不清楚</c>


705
00:40:15,582 --> 00:40:16,950 line:-1
<c.magenta>问题是什么</c>


706
00:40:17,351 --> 00:40:22,789 line:-2
<c.magenta>就我所看 地址没问题</c>
<c.magenta>夏威夷也是有效的州</c>


707
00:40:22,956 --> 00:40:25,559 line:-1
<c.magenta>一切都很好 如果我再次选定</c>


708
00:40:26,460 --> 00:40:29,930 line:-1
<c.magenta>并没有地址出错的更多信息</c>


709
00:40:30,531 --> 00:40:34,801 line:-1
<c.magenta>我知道好友Daniel也喜欢这款</c>


710
00:40:34,868 --> 00:40:38,238 line:-1
<c.magenta>他住在加州 我们看看能否给他发过去</c>


711
00:40:39,206 --> 00:40:41,742 line:-1
<c.magenta>我们返回后 貌似没什么问题</c>


712
00:40:42,109 --> 00:40:44,578 line:-1
<c.magenta>那么 一定是莎拉的地址有问题</c>


713
00:40:44,978 --> 00:40:47,881 line:-1
<c.magenta>但我不清楚到底是什么问题</c>


714
00:40:48,615 --> 00:40:52,152 line:-2
<c.magenta>使用密码按钮 点击支付</c>
<c.magenta>试着授权这次付款</c>


715
00:40:53,253 --> 00:40:57,324 line:-2
<c.magenta>Apple Pay表单</c>
<c.magenta>显示联系方式有误</c>


716
00:40:57,791 --> 00:40:59,826 line:-1
<c.magenta>文字再次标红</c>


717
00:41:00,327 --> 00:41:01,528 line:-1
<c.magenta>如果我选择这个地址</c>


718
00:41:02,062 --> 00:41:07,467 line:-2
<c.magenta>并无明确信息说明</c>
<c.magenta>联系信息有什么问题</c>


719
00:41:07,734 --> 00:41:09,670 line:-1
<c.magenta>也许是百分号</c>


720
00:41:10,137 --> 00:41:14,007 line:-2
<c.magenta>也许是我不喜欢</c>
<c.magenta>iCloud.com电邮地址</c>


721
00:41:14,408 --> 00:41:17,578 line:-2
<c.magenta>我们选择Daniel的真实电邮地址</c>
<c.magenta>看看效果如何</c>


722
00:41:18,545 --> 00:41:21,915 line:-1
<c.magenta>我们选择后 会点击用密码支付</c>


723
00:41:22,349 --> 00:41:23,517 line:-1
<c.magenta>然后付款成功</c>


724
00:41:23,817 --> 00:41:25,686 line:-1
<c.magenta>好的 不错</c>


725
00:41:26,153 --> 00:41:28,555 line:-1
<c.magenta>可是作为用户 很难找出</c>


726
00:41:28,622 --> 00:41:31,458 line:-1
<c.magenta>之前的地址有什么问题</c>


727
00:41:31,792 --> 00:41:34,428 line:-1
<c.magenta>我们来试试最新的API</c>


728
00:41:35,195 --> 00:41:39,867 line:-2
<c.magenta>第一个函数是</c>
<c.magenta>didSelectShippingContact方法</c>


729
00:41:40,534 --> 00:41:45,339 line:-2
<c.magenta>这里采用了PKPaymentRequest</c>
<c.magenta>ShippingContactUpdate对象</c>


730
00:41:45,973 --> 00:41:47,207 line:-1
<c.magenta>我们首先要做的是</c>


731
00:41:48,275 --> 00:41:54,381 line:-1
<c.magenta>在启用前 具备更新的本地变量</c>


732
00:41:55,349 --> 00:41:59,219 line:-1
<c.magenta>检查错误后 我们启用它</c>


733
00:41:59,887 --> 00:42:02,689 line:-1
<c.magenta>接下来 是创建一组错误</c>


734
00:42:02,756 --> 00:42:06,660 line:-1
<c.magenta>在验证地址时 会添加其中</c>


735
00:42:07,628 --> 00:42:11,331 line:-1
<c.magenta>和之前类似 我们要检查状态是否有效</c>


736
00:42:11,632 --> 00:42:13,100 line:-1
<c.magenta>如果无效</c>


737
00:42:13,166 --> 00:42:16,970 line:-1
<c.magenta>我们不会设置无效发货地址的状态</c>


738
00:42:17,037 --> 00:42:19,373 line:-1
<c.magenta>相反会添加错误 新的错误类型</c>


739
00:42:19,606 --> 00:42:22,176 line:-2
<c.magenta>paymentShippingAddress</c>
<c.magenta>UnserviceableError</c>


740
00:42:22,509 --> 00:42:25,712 line:-1
<c.magenta>在这里 其中有本地化说明</c>


741
00:42:26,213 --> 00:42:30,017 line:-1
<c.magenta>在本例中 我们表示 无法向该州发货</c>


742
00:42:31,585 --> 00:42:34,321 line:-2
<c.magenta>我们来看 将添加</c>
<c.magenta>之前未做的另外检查项</c>


743
00:42:34,388 --> 00:42:36,523 line:-1
<c.magenta>即检查邮编是否有效</c>


744
00:42:37,157 --> 00:42:39,293 line:-1
<c.magenta>这是另一种错误类型</c>


745
00:42:39,359 --> 00:42:41,695 line:-2
<c.magenta>paymentShippingAddress</c>
<c.magenta>InvalidError</c>


746
00:42:42,062 --> 00:42:46,466 line:-2
<c.magenta>这里要采用一个键值</c>
<c.magenta>CNPostalAddress键值</c>


747
00:42:46,967 --> 00:42:50,537 line:-2
<c.magenta>在本例中 我们采用</c>
<c.magenta>CNPostalAddress邮编键值</c>


748
00:42:50,604 --> 00:42:55,008 line:-2
<c.magenta>这可以告知PassKit</c>
<c.magenta>显示错误是什么</c>


749
00:42:55,075 --> 00:42:57,878 line:-1
<c.magenta>同时用户会尝试编辑地址</c>


750
00:42:59,379 --> 00:43:01,014 line:-1
<c.magenta>采用本地化…</c>


751
00:43:01,748 --> 00:43:05,652 line:-2
<c.magenta>采用localizedDescription</c>
<c.magenta>邮编与城市不匹配</c>


752
00:43:07,721 --> 00:43:09,857 line:-1
<c.magenta>好 我们继续 接下来要做的是</c>


753
00:43:10,724 --> 00:43:12,926 line:-1
<c.magenta>检查错误数组是否为空</c>


754
00:43:13,427 --> 00:43:14,261 line:-1
<c.magenta>如果是空</c>


755
00:43:14,761 --> 00:43:19,366 line:-2
<c.magenta>我们会启动更新对象 使用</c>
<c.magenta>paymentSummaryItems 不会改变</c>


756
00:43:19,833 --> 00:43:24,137 line:-1
<c.magenta>否则我们会启动更新对象</c>


757
00:43:24,204 --> 00:43:28,475 line:-1
<c.magenta>使用错误 付款汇总项和发货方式</c>


758
00:43:29,843 --> 00:43:31,445 line:-1
<c.magenta>我们要做的最后一个环节是</c>


759
00:43:31,945 --> 00:43:34,615 line:-1
<c.magenta>调用这个新对象的完成块</c>


760
00:43:36,216 --> 00:43:38,919 line:-2
<c.magenta>我们来调整</c>
<c.magenta>didAuthorizePayment函数</c>


761
00:43:39,419 --> 00:43:43,056 line:-1
<c.magenta>这是之前的代码</c>


762
00:43:43,123 --> 00:43:44,424 line:-1
<c.magenta>这样可以做注释</c>


763
00:43:44,725 --> 00:43:48,195 line:-1
<c.magenta>首先做得事情和之前类似</c>


764
00:43:48,262 --> 00:43:51,465 line:-1
<c.magenta>创建所附的错误数组</c>


765
00:43:52,766 --> 00:43:54,568 line:-1
<c.magenta>在本例中 我们检查了一项内容</c>


766
00:43:54,635 --> 00:43:57,971 line:-1
<c.magenta>即电邮地址是否有效</c>


767
00:43:58,405 --> 00:43:59,439 line:-1
<c.magenta>如果无效</c>


768
00:43:59,873 --> 00:44:04,845 line:-2
<c.magenta>我们会添加另一种错误类型</c>
<c.magenta>paymentContactInvalidError</c>


769
00:44:05,179 --> 00:44:07,648 line:-2
<c.magenta>这次没有采用</c>
<c.magenta>CNPostalAddress键值</c>


770
00:44:07,714 --> 00:44:10,484 line:-1
<c.magenta>而是用了PKContact域键值</c>


771
00:44:11,351 --> 00:44:12,786 line:-1
<c.magenta>这次 我们采用了…</c>


772
00:44:13,921 --> 00:44:18,225 line:-2
<c.magenta>提供了电邮地址</c>
<c.magenta>这样可以显示正确的位置</c>


773
00:44:19,226 --> 00:44:21,595 line:-1
<c.magenta>好 再有另一个本地化说明</c>


774
00:44:21,662 --> 00:44:23,664 line:-1
<c.magenta>这将在Apple Pay表单中体现</c>


775
00:44:26,767 --> 00:44:30,037 line:-2
<c.magenta>与之前相似 我们要检查</c>
<c.magenta>错误数组是否为空</c>


776
00:44:30,370 --> 00:44:32,973 line:-1
<c.magenta>如果是空 我们将状态设为成功</c>


777
00:44:33,040 --> 00:44:35,676 line:-1
<c.magenta>否则 我们将状态设为失败</c>


778
00:44:35,976 --> 00:44:38,779 line:-1
<c.magenta>要做的最后一件事 是调用完成块</c>


779
00:44:38,846 --> 00:44:42,516 line:-2
<c.magenta>通过启用</c>
<c.magenta>PKPaymentAuthorizationResult</c>


780
00:44:42,883 --> 00:44:45,886 line:-1
<c.magenta>使用同样的状态以及创建的错误</c>


781
00:44:47,054 --> 00:44:48,088 line:-1
<c.magenta>来看部署后</c>


782
00:44:48,488 --> 00:44:49,623 line:-1
<c.magenta>效果如何</c>


783
00:44:51,558 --> 00:44:54,995 line:-2
<c.magenta>应用出现后 我们再次点击</c>
<c.magenta>Apple Pay购买按钮</c>


784
00:44:55,696 --> 00:44:57,831 line:-1
<c.magenta>立刻显示有错误</c>


785
00:44:58,265 --> 00:45:00,334 line:-1
<c.magenta>应用并未按照发货地址发货</c>


786
00:45:00,400 --> 00:45:02,803 line:-1
<c.magenta>这是新的错误 我们在今年已经介绍过</c>


787
00:45:03,604 --> 00:45:08,976 line:-1
<c.magenta>在联系信息下 有无法发货的文字</c>


788
00:45:09,510 --> 00:45:10,711 line:-1
<c.magenta>我选中后</c>


789
00:45:11,078 --> 00:45:15,082 line:-2
<c.magenta>联系信息下方的文字表明</c>
<c.magenta>无法向该州发货</c>


790
00:45:15,516 --> 00:45:17,618 line:-1
<c.magenta>这样用户会很明确</c>


791
00:45:18,318 --> 00:45:22,055 line:-1
<c.magenta>了解到该应用不支持向夏威夷发货</c>


792
00:45:22,723 --> 00:45:26,159 line:-2
<c.magenta>那么试试把货物发给</c>
<c.magenta>好友John Appleseed</c>


793
00:45:26,226 --> 00:45:29,930 line:-1
<c.magenta>他的发货地址是库比蒂诺</c>


794
00:45:30,631 --> 00:45:31,999 line:-1
<c.magenta>我选中后</c>


795
00:45:32,499 --> 00:45:36,570 line:-1
<c.magenta>出现错误提示 称邮编和城市不匹配</c>


796
00:45:37,171 --> 00:45:39,206 line:-1
<c.magenta>如果我选择这个地址</c>


797
00:45:39,873 --> 00:45:42,242 line:-1
<c.magenta>邮编就会标红</c>


798
00:45:42,643 --> 00:45:45,445 line:-1
<c.magenta>因为我知道12345</c>


799
00:45:45,512 --> 00:45:48,348 line:-1
<c.magenta>不是库比蒂诺的邮编</c>


800
00:45:48,415 --> 00:45:53,754 line:-1
<c.magenta>我改成95014 点击完成保存</c>


801
00:45:53,987 --> 00:45:54,888 line:-1
<c.magenta>返回</c>


802
00:45:54,955 --> 00:45:59,593 line:-2
<c.magenta>我修改了所有的联系信息</c>
<c.magenta>或遇到的地址问题</c>


803
00:46:00,394 --> 00:46:02,396 line:-1
<c.magenta>再次尝试用密码付款</c>


804
00:46:03,397 --> 00:46:07,034 line:-1
<c.magenta>发现联系信息存在错误</c>


805
00:46:07,668 --> 00:46:10,137 line:-1
<c.magenta>点击之后 我们发现</c>


806
00:46:10,204 --> 00:46:14,174 line:-1
<c.magenta>电邮地址中存在无效字符 即百分号</c>


807
00:46:14,608 --> 00:46:19,112 line:-2
<c.magenta>作为用户 我可以编辑电邮地址</c>
<c.magenta>删除百分号</c>


808
00:46:19,179 --> 00:46:22,683 line:-1
<c.magenta>或是选择另外的邮件地址</c>


809
00:46:23,183 --> 00:46:25,953 line:-2
<c.magenta>我选了John Appleseed的</c>
<c.magenta>电邮地址 是在mac.com开设的</c>


810
00:46:27,054 --> 00:46:31,825 line:-1
<c.magenta>返回点击用密码付款 即授权支付</c>


811
00:46:32,459 --> 00:46:35,062 line:-1
<c.magenta>这就介绍了新的API</c>


812
00:46:35,128 --> 00:46:38,198 line:-1
<c.magenta>是在iOS 11中推出的</c>


813
00:46:38,265 --> 00:46:40,434 line:-1
<c.magenta>你可以为用户提供更多反馈</c>


814
00:46:40,501 --> 00:46:42,936 line:-1
<c.magenta>同时处理Apple Pay表单的地址问题</c>


815
00:46:43,570 --> 00:46:46,640 line:-1
<c.magenta>我们希望这可以创建更好的用户体验</c>


816
00:46:46,707 --> 00:46:49,176 line:-1
<c.magenta>在他们在你的应用中使用Apple Pay时</c>


817
00:46:49,643 --> 00:46:50,477 line:-1
<c.magenta>谢谢</c>


818
00:46:54,948 --> 00:46:55,816 line:-1
<c.magenta>谢谢 Jon</c>


819
00:46:55,883 --> 00:46:59,419 line:-1
<c.magenta>希望大家可以花时间更新自己的应用</c>


820
00:47:00,521 --> 00:47:03,156 line:-1
<c.magenta>我想简单说说Wallet的最新内容</c>


821
00:47:03,657 --> 00:47:06,193 line:-1
<c.magenta>如果下载了iOS 11的测试版</c>


822
00:47:06,260 --> 00:47:09,062 line:-2
<c.magenta>可能注意到Wallet中</c>
<c.magenta>一项新增内容</c>


823
00:47:09,129 --> 00:47:10,364 line:-1
<c.magenta>看似有些不太一样</c>


824
00:47:10,430 --> 00:47:11,865 line:-1
<c.magenta>更亮了些</c>


825
00:47:12,232 --> 00:47:15,669 line:-2
<c.magenta>如果没注意到 还有就是</c>
<c.magenta>批量删除管理界面</c>


826
00:47:15,736 --> 00:47:17,337 line:-1
<c.magenta>用于传递内容</c>


827
00:47:18,539 --> 00:47:21,074 line:-2
<c.magenta>新的配色方案表明</c>
<c.magenta>这可能是不错的时机</c>


828
00:47:21,141 --> 00:47:22,876 line:-1
<c.magenta>来重新访问之前的设计</c>


829
00:47:23,076 --> 00:47:25,913 line:-1
<c.magenta>好好看看 确保其样貌不错</c>


830
00:47:26,513 --> 00:47:30,918 line:-2
<c.magenta>如果从未更新</c>
<c.magenta>具备Watch资产或3x资产</c>


831
00:47:31,151 --> 00:47:32,152 line:-1
<c.magenta>这也许是不错的时机</c>


832
00:47:33,387 --> 00:47:36,490 line:-1
<c.magenta>我还想简要更新NFC传递的内容</c>


833
00:47:36,557 --> 00:47:41,395 line:-2
<c.magenta>NFC传递是常规传递</c>
<c.magenta>可以帮助通过NFC传递客户信息</c>


834
00:47:41,595 --> 00:47:44,431 line:-1
<c.magenta>从iOS 11开始 我们只支持</c>


835
00:47:44,498 --> 00:47:48,602 line:-2
<c.magenta>更安全的NFC传递类型</c>
<c.magenta>我们称之为加密NFC传递</c>


836
00:47:49,169 --> 00:47:51,939 line:-1
<c.magenta>如果想更多了解NFC传递 可以查看</c>


837
00:47:52,005 --> 00:47:55,542 line:-2
<c.magenta>去年的演讲内容</c>
<c.magenta>也可前往开发人员网站</c>


838
00:47:56,076 --> 00:47:59,246 line:-2
<c.magenta>了解更多详情 可以注册</c>
<c.magenta>充分利用这些内容</c>


839
00:48:00,647 --> 00:48:04,051 line:-2
<c.magenta>关于传递 今年Wallet中</c>
<c.magenta>有个小的新特性</c>


840
00:48:04,117 --> 00:48:05,619 line:-1
<c.magenta>就是分享</c>


841
00:48:05,686 --> 00:48:07,788 line:-1
<c.magenta>作为常会用到的特性</c>


842
00:48:07,855 --> 00:48:09,790 line:-1
<c.magenta>传递现在可以选择通过分享实现</c>


843
00:48:10,791 --> 00:48:14,895 line:-2
<c.magenta>对于个人使用项目</c>
<c.magenta>例如票券会员卡 这会很有帮助</c>


844
00:48:15,062 --> 00:48:16,930 line:-1
<c.magenta>使用起来也很方便</c>


845
00:48:17,364 --> 00:48:20,834 line:-1
<c.magenta>是传递JSON的顶级 JSON键值</c>


846
00:48:21,335 --> 00:48:25,772 line:-2
<c.magenta>这里是sharingProhibited</c>
<c.magenta>礼品卡 会员卡</c>


847
00:48:25,839 --> 00:48:28,642 line:-1
<c.magenta>可以设为真 这样用户无法</c>


848
00:48:28,709 --> 00:48:30,677 line:0
<c.magenta>通过airdrop iMessage进行分享</c>


849
00:48:31,011 --> 00:48:34,348 line:0
<c.magenta>这是个便捷特性 不是安全性特性</c>


850
00:48:34,414 --> 00:48:37,451 line:0
<c.magenta>显然 用户还可以通过其他方式分享</c>


851
00:48:37,518 --> 00:48:40,721 line:0
<c.magenta>但是在较早版本的iOS中并不支持</c>


852
00:48:41,288 --> 00:48:44,057 line:-2
<c.magenta>不过若不希望用户分享的话</c>
<c.magenta>这是个很好的理由</c>


853
00:48:44,124 --> 00:48:46,927 line:-1
<c.magenta>纯粹处于体验需要</c>


854
00:48:48,295 --> 00:48:49,296 line:-1
<c.magenta>这就是Apple Pay</c>


855
00:48:50,097 --> 00:48:51,598 line:-1
<c.magenta>和Wallet的最新特性</c>


856
00:48:52,099 --> 00:48:54,334 line:-1
<c.magenta>我们介绍了构建最佳</c>


857
00:48:54,401 --> 00:48:56,770 line:-1
<c.magenta>Apple Pay体验的一些指南</c>


858
00:48:56,970 --> 00:48:59,439 line:-1
<c.magenta>处理复杂错误的新API</c>


859
00:48:59,506 --> 00:49:02,576 line:-1
<c.magenta>分享NFC互动传递的新方法</c>


860
00:49:02,643 --> 00:49:04,611 line:-1
<c.magenta>以及这些内容的更多相关信息</c>


861
00:49:04,678 --> 00:49:06,947 line:-1
<c.magenta>大家可以查看开发人员网站</c>


862
00:49:07,714 --> 00:49:10,017 line:-1
<c.magenta>其中有些内容 你可能会觉得值得一看</c>


863
00:49:10,083 --> 00:49:13,220 line:-1
<c.magenta>我估计 在座大部分会对此非常激动</c>


864
00:49:13,520 --> 00:49:16,823 line:-1
<c.magenta>即Core NFC框架</c>


865
00:49:17,157 --> 00:49:22,930 line:-2
<c.magenta>大家可以阅读NFC标签</c>
<c.magenta>了解支持硬件</c>


866
00:49:23,497 --> 00:49:26,466 line:-2
<c.magenta>我们有着专门的演讲内容</c>
<c.magenta>只在线上进行</c>


867
00:49:26,633 --> 00:49:28,035 line:-1
<c.magenta>现在就可以观看</c>


868
00:49:28,635 --> 00:49:34,174 line:-2
<c.magenta>只需在WWDC网站上搜索</c>
<c.magenta>CoreNFC即可 去看看吧</c>


869
00:49:34,608 --> 00:49:36,510 line:-1
<c.magenta>今年我们就是这些内容</c>


870
00:49:36,577 --> 00:49:38,979 line:-2
<c.magenta>希望大家可以出来</c>
<c.magenta>参加非常棒的啤酒狂欢节</c>


871
00:49:39,046 --> 00:49:42,649 line:-2
<c.magenta>希望明年有机会介绍</c>
<c.magenta>Apple Pay和Wallet的更多内容</c>


872
00:49:42,850 --> 00:49:43,784 line:-1
<c.magenta>非常感谢</c>

